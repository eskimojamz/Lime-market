[{"/Users/eskimo/Coding/Hoppang/client/src/components/LoginButton.js":"1","/Users/eskimo/Coding/Lime-market/client/src/index.js":"2","/Users/eskimo/Coding/Lime-market/client/src/App.js":"3","/Users/eskimo/Coding/Lime-market/client/src/actions/actions.js":"4","/Users/eskimo/Coding/Lime-market/client/src/reducers/index.js":"5","/Users/eskimo/Coding/Lime-market/client/src/routes/Home.js":"6","/Users/eskimo/Coding/Lime-market/client/src/routes/ListingInfoPage.js":"7","/Users/eskimo/Coding/Lime-market/client/src/routes/ListingsPage.js":"8","/Users/eskimo/Coding/Lime-market/client/src/components/Navbar.js":"9","/Users/eskimo/Coding/Lime-market/client/src/routes/LoginPage.js":"10","/Users/eskimo/Coding/Lime-market/client/src/routes/ProfilePage.js":"11","/Users/eskimo/Coding/Lime-market/client/src/routes/FormPage.js":"12","/Users/eskimo/Coding/Lime-market/client/src/components/Tooltip.js":"13","/Users/eskimo/Coding/Lime-market/client/src/reducers/listings.js":"14","/Users/eskimo/Coding/Lime-market/client/src/reducers/listing.js":"15","/Users/eskimo/Coding/Lime-market/client/src/reducers/comments.js":"16","/Users/eskimo/Coding/Lime-market/client/src/components/Listing.js":"17","/Users/eskimo/Coding/Lime-market/client/src/components/Loading.js":"18","/Users/eskimo/Coding/Lime-market/client/src/components/LoginButton.js":"19","/Users/eskimo/Coding/Lime-market/client/src/components/LogoutButton.js":"20","/Users/eskimo/Coding/Lime-market/client/src/components/MenuButton.js":"21","/Users/eskimo/Coding/Lime-market/client/src/components/ListingForm.js":"22","/Users/eskimo/Coding/Lime-market/client/src/routes/SignupPage.js":"23","/Users/eskimo/Coding/Lime-market/client/src/api/api.js":"24","/Users/eskimo/Coding/Lime-market/client/src/pagination/Pagination.js":"25","/Users/eskimo/Coding/Lime-market/client/src/pagination/usePagination.js":"26","/Users/eskimo/Coding/Lime-market/client/src/components/EditMenuBackdrop.js":"27","/Users/eskimo/Coding/Lime-market/client/src/reducers/currentListing.js":"28"},{"size":304,"mtime":1632990424348,"results":"29","hashOfConfig":"30"},{"size":621,"mtime":1633501902230,"results":"31","hashOfConfig":"32"},{"size":1833,"mtime":1636085455668,"results":"33","hashOfConfig":"32"},{"size":3936,"mtime":1636614701674,"results":"34","hashOfConfig":"32"},{"size":396,"mtime":1636614778743,"results":"35","hashOfConfig":"32"},{"size":2069,"mtime":1636086162174,"results":"36","hashOfConfig":"32"},{"size":19085,"mtime":1636959870365,"results":"37","hashOfConfig":"32"},{"size":2403,"mtime":1636618985881,"results":"38","hashOfConfig":"32"},{"size":11594,"mtime":1636602815495,"results":"39","hashOfConfig":"32"},{"size":5709,"mtime":1636956539422,"results":"40","hashOfConfig":"32"},{"size":1526,"mtime":1636085335640,"results":"41","hashOfConfig":"32"},{"size":1712,"mtime":1636966614281,"results":"42","hashOfConfig":"32"},{"size":845,"mtime":1636959820822,"results":"43","hashOfConfig":"32"},{"size":651,"mtime":1633060219397,"results":"44","hashOfConfig":"32"},{"size":224,"mtime":1636614634183,"results":"45","hashOfConfig":"32"},{"size":224,"mtime":1635242102456,"results":"46","hashOfConfig":"32"},{"size":7202,"mtime":1636955135455,"results":"47","hashOfConfig":"32"},{"size":245,"mtime":1632990424348,"results":"48","hashOfConfig":"32"},{"size":254,"mtime":1634230618432,"results":"49","hashOfConfig":"32"},{"size":220,"mtime":1632990424348,"results":"50","hashOfConfig":"32"},{"size":1491,"mtime":1632990424349,"results":"51","hashOfConfig":"32"},{"size":13769,"mtime":1636963781187,"results":"52","hashOfConfig":"32"},{"size":5300,"mtime":1636969986438,"results":"53","hashOfConfig":"32"},{"size":1954,"mtime":1635899479175,"results":"54","hashOfConfig":"32"},{"size":1940,"mtime":1635917783478,"results":"55","hashOfConfig":"32"},{"size":2700,"mtime":1635913440876,"results":"56","hashOfConfig":"32"},{"size":884,"mtime":1636015451207,"results":"57","hashOfConfig":"32"},{"size":240,"mtime":1636614817451,"results":"58","hashOfConfig":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ff4vti",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"cd2gkb",{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"63"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/Users/eskimo/Coding/Hoppang/client/src/components/LoginButton.js",[],"/Users/eskimo/Coding/Lime-market/client/src/index.js",[],["127","128"],"/Users/eskimo/Coding/Lime-market/client/src/App.js",["129","130"],"import React, { useState, useEffect, createContext } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\n\nimport { Route, Switch, useLocation } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport SignupPage from './routes/SignupPage'\nimport LoginPage from './routes/LoginPage'\nimport Home from './routes/Home'\nimport ListingsPage from './routes/ListingsPage'\nimport ListingInfoPage from './routes/ListingInfoPage'\nimport FormPage from './routes/FormPage'\nimport ProfilePage from './routes/ProfilePage'\nimport { motion, AnimateSharedLayout } from 'framer-motion'\n\nexport const UserContext = createContext(null)\n\nconst App = () => {\n    const location = useLocation()\n    const [currentUser, setCurrentUser] = useState(null)\n    console.log(currentUser)\n\n    useEffect(() => {\n      setCurrentUser(JSON.parse(sessionStorage.getItem('user')))\n    }, [])\n\n  return (\n      <>\n        <AnimateSharedLayout>\n        <motion.div className=\"wrapper\">\n          <UserContext.Provider value={{currentUser, setCurrentUser}}>\n          <Navbar />\n          <motion.div className=\"container\">\n            <Switch location={location} key={location.pathname}>\n              <Route path='/' exact component={Home} />\n              <Route path='/register/' component={SignupPage} />\n              <Route path='/login/' component={LoginPage} />\n              <Route exact path='/listings' component={ListingsPage} />\n              <Route path='/listings/:listingId' exact component={ListingInfoPage} />\n              <Route path='/form' exact component={FormPage} />\n              <Route path='/profile/:userId' component={ProfilePage} />\n            </Switch>\n          </motion.div>\n          </UserContext.Provider>\n        </motion.div>\n        </AnimateSharedLayout>\n    </>\n  )\n}\n\nexport default App","/Users/eskimo/Coding/Lime-market/client/src/actions/actions.js",[],"/Users/eskimo/Coding/Lime-market/client/src/reducers/index.js",[],"/Users/eskimo/Coding/Lime-market/client/src/routes/Home.js",["131","132"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport heroImg from '../assets/hero-img.svg'\nimport { motion } from 'framer-motion'\n\nconst Home = () => {\n    const history = useHistory()\n\n    return (\n        <>\n        \n        <div className=\"hero\">\n            <motion.div \n                className=\"hero-mobile\"\n            >\n                <img src={heroImg} className=\"hero-img\" />\n            </motion.div>\n            \n            <div className=\"hero-left\">\n                <motion.div\n                    initial={{ y: 20, opacity: 0 }}\n                    animate={{ y: 0, opacity: 1 }}\n                    transition={{ delay: 1.5, duration: 0.25 }}\n                >\n                    <h1>buy & sell</h1>\n                    <h1 className=\"highlight\">safely & affordably</h1>\n                    <p>Lime Market makes it easy to buy and sell items on a safe and secure platform.</p> <p>Powered by the Paypal payment system, users can buy and sell items with confidence.</p>\n                </motion.div>\n                <motion.button \n                    className=\"button-primary\" \n                    initial={{ y: 20, opacity: 0 }}\n                    animate={{ y: 0, opacity: 1 }}\n                    transition={{ delay: 1.75, duration: 0.25 }}\n                    onClick={() => {\n                        history.push('/listings')\n                    }}>\n                        See Listings\n                </motion.button>\n            </div>\n\n            <motion.div \n                className=\"hero-right\"\n                initial={{ y: 20, opacity: 0 }}\n                animate={{ y: 0, opacity: 1 }}\n                transition={{ delay: 2, duration: 0.25 }}\n                >\n                <img src={heroImg} className=\"hero-img\" />\n            </motion.div>\n        </div>\n\n        <motion.div className=\"hero-bottom\"\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n        >\n            {/* Popular Listings */}\n        </motion.div>\n        </>\n    )\n}\n\nexport default Home","/Users/eskimo/Coding/Lime-market/client/src/routes/ListingInfoPage.js",["133","134","135","136","137","138","139","140","141","142","143"],"import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { Link, Redirect, useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentListing, addComment, getListing } from '../actions/actions';\nimport moment from 'moment';\nimport Lottie from 'react-lottie-segments'\nimport Tooltip from '../components/Tooltip.js';\nimport menu from '../assets/menu-v.svg';\nimport deleteSvg from '../assets/delete.svg'\nimport like from '../assets/like.json'\nimport { motion, AnimateSharedLayout } from 'framer-motion'\nimport { UserContext } from '../App';\nimport axios from 'axios'\nimport LoginButton from '../components/LoginButton';\nimport EditMenuBackdrop from '../components/EditMenuBackdrop';\n\nconst ListingInfoPage = () => {\n    const user = JSON.parse(sessionStorage.getItem('user'))\n    const {currentUser, setCurrentUser} = useContext(UserContext)\n    console.log(currentUser)\n    const token = sessionStorage.getItem('token')\n    const dispatch = useDispatch()\n    const { listingId } = useParams()\n    const listing = useSelector((state) => state.listing)\n    console.log(listing)\n    // const [state, setState] = useState({\n    //     likes: null,\n    //     menuOpen: false,\n    //     edit: false, \n    //     deleted: false, \n    //     liked: null, \n    //     isStopped: true, \n    //     toggle: false, \n    //     newComment: \n    // })\n    const [likes, setLikes] = useState()\n    \n    \n    const [toggleMenu, setToggleMenu] = useState(false)\n    const [toggleTooltip, setToggleTooltip] = useState(false)\n    const [edit, setEdit] = useState(false)\n    const [deleted, setDeleted] = useState(false)\n\n    const [liked, setLiked] = useState()\n    const [isStopped, setIsStopped] = useState(true)\n    const [listingComments, setComments] = useState()\n    \n    const [newComment, setNewComment] = useState(\"\")\n    const [deleteModalOn, setDeleteModal] = useState(false)\n\n    const getComments = async(listingId) => {\n        await axios\n            .get(`http://localhost:8000/comments?listing_id=${listingId}`)\n            .then(response => {\n                setComments(response.data)\n            })\n    }\n\n    const toggleLike = () => {\n        if (!liked) {\n            axios.patch(`http://localhost:8000/listings/${listingId}/like`, \n                {\n                    like_count: likes + 1\n                },\n                {\n                    headers: {\n                        'Authorization': `Token ${token}`\n                    }\n                }\n            )\n            .then(() => {\n                console.log(user?.watchlist)\n                let newWatchlist = Object.values(user?.watchlist)\n                const index = newWatchlist.length\n                newWatchlist[index] = {\n                    id: listingId\n                }\n                return axios.patch(`http://localhost:8000/users/update/${user.username}`, \n                    {\n                        watchlist: newWatchlist\n                    },\n                    {\n                        headers: {\n                            'Authorization': `Token ${token}`\n                        }\n                    }    \n                )\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/users/view/${user.username}`)\n                    .then((response) => {\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                        setCurrentUser(response.data)\n                        getLikes(listingId)\n                    })\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n                    .then(response => {\n                        setLikes(response.data.like_count)\n                        setIsStopped(!isStopped)\n                        setLiked(!liked)\n                    })\n            })\n        } else if (liked) {\n            axios.patch(`http://localhost:8000/listings/${listingId}/like`, \n                {\n                    like_count: likes - 1\n                },\n                {\n                    headers: {\n                        'Authorization': `Token ${token}`\n                    }\n                }\n            )\n            .then(() => {\n                const newWatchlist = user?.watchlist\n                const index = newWatchlist.findIndex(l => l.id == listingId.toString())\n                if (index > -1) {\n                    newWatchlist.splice(index, 1)\n                }\n                console.log(newWatchlist)\n\n                return axios.patch(`http://localhost:8000/users/update/${user.username}`, \n                    {\n                        watchlist: newWatchlist\n                    },\n                    {\n                        headers: {\n                            'Authorization': `Token ${token}`\n                        }\n                    }    \n                )\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/users/view/${user.username}`)\n                    .then((response) => {\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                        setCurrentUser(response.data)\n                    })\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n                    .then(response => {\n                        setLikes(response.data.like_count)\n                        setIsStopped(!isStopped)\n                        setLiked(!liked)\n                    })\n            })\n        }\n    }\n\n    const getLikes = (listingId) => {\n        axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n        .then(response => {\n            setLikes(response.data.like_count)\n        })\n        .catch((error) => {\n            console.log(error)\n            setLikes(0)\n        })\n    }\n\n    const handleEdit = () => {\n        dispatch(setCurrentListing(listing))\n        setEdit(true)\n    }\n\n    const handleDelete = async() => {\n        await axios.delete(`http://localhost:8000/listings/delete/${listingId}`,\n            {\n                headers: {\n                    'Authorization': `Token ${token}`\n                }\n            }\n        ).then(async() => {\n            const newList = user?.listings_created.filter(l => l.id !== parseInt(listingId))\n\n            await axios.patch(`http://localhost:8000/users/update/${user.username}`,\n                {\n                    listings_created: newList\n                },\n                {\n                    headers: {\n                        'Authorization': `Token ${token}`\n                    }\n                }\n            ).then(() => {\n                setDeleted(true)\n            })\n        })\n        \n    }\n\n    const handleComment = (e) => {\n        e.preventDefault()\n        dispatch(addComment(\n            // comment\n            {   \n                creator: user.username,\n                creator_img: user.profile_img,\n                listing: listingId,\n                content: newComment,\n            },\n            {\n                headers: {\n                    'Authorization': `Token ${token}`\n                }\n            } \n        ))\n        setNewComment(\"\")\n        getComments(listingId)\n    }\n\n    const handleCommentDelete = async(commentId) => {\n        await axios.delete(`http://localhost:8000/comments/delete/${commentId}`,\n            {\n                headers: {\n                    'Authorization': `Token ${token}`\n                }\n            }\n        )\n        .then(() => {\n            getComments(listingId)\n            setDeleteModal(!deleteModalOn)\n        })\n    }\n\n    const paypal = useRef();\n\n    useEffect(() => {\n        dispatch(getListing(listingId))\n        if (user) {\n            const likedBool = user?.watchlist.some(listing => listing.id === listingId.toString())\n            setIsStopped(!likedBool)\n            setLiked(likedBool)\n        }\n        getLikes(listingId)\n        getComments(listingId)\n    }, [currentUser])\n\n    useEffect(() => {\n        const product = {\n            price: listing?.price,\n            description: listing?.description,\n        };\n\n        window.paypal\n            .Buttons({\n            style: {\n                color: 'silver',\n                size: 'medium',\n                layout: 'vertical',\n                label: 'checkout',\n            },\n            createOrder: (data, actions) => {\n                return actions.order.create({\n                purchase_units: [\n                    {\n                    description: product.description,\n                    amount: {\n                        currency_code: \"USD\",\n                        value: product.price\n                    }\n                    }\n                ]\n                });\n            },\n            onApprove: async (data, actions) => {\n                const order = await actions.order.capture();\n\n                console.log(order);\n            },\n            onError: err => {\n                console.log(err);\n            }\n            })\n            .render(paypal.current);\n    }, []);\n    \n    return (\n        <>\n        { listing &&\n        <motion.div className=\"page-wrapper\"\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ delay: 0.5, duration: 0.25 }}\n        >\n        \n            { deleted && <Redirect to=\"/listings\" /> }\n\n            {/* Toggles */}\n            <Tooltip content=\"Please log-in to like and save listings\" toggleTooltip={toggleTooltip} setToggleTooltip={setToggleTooltip} />\n            <EditMenuBackdrop toggleMenu={toggleMenu} setToggleMenu={setToggleMenu} handleEdit={handleEdit} handleDelete={handleDelete}/>\n            {/*  */}\n\n            {/* Listing Info */}\n            <div className=\"listing-info\">\n                { (listing?.creator === user?.username) &&\n                <div className=\"listing-info-edit-menu\">\n                    {/* Toggle EditMenu */}\n                    <button className={`button-menu ${toggleMenu && \"button-menu-active\"}`} onClick={() => setToggleMenu(!toggleMenu)} >\n                        <img src={menu} />\n                    </button>\n                    \n                    <div className={`edit-menu ${toggleMenu && \"edit-menu-open\"}`}>\n                        <button className=\"button-menu-edit\" onClick={handleEdit}><h5 >Edit</h5></button>\n                        <button className=\"button-menu-delete\" onClick={handleDelete}><h5>Delete</h5></button>\n                    </div>\n                    \n                </div>\n                }\n                \n                { edit && <Redirect to=\"/form\" /> }\n                <div className=\"listing-info-img\">\n                    <img src={listing?.image1} />\n                </div>\n                <div className=\"listing-info-title\">\n                    <h1>{listing?.title}</h1>\n                </div>\n                <div className=\"listing-info-desc\">\n                    <p>{listing?.description}</p>\n                </div>\n                <div className=\"listing-info-bottom\">\n                    <div className=\"listing-info-price\">\n                        <h1>${listing?.price}</h1>\n                    </div>\n                    <div className=\"listing-info-creator\">\n                        <div className=\"listing-info-creator-img\">\n                            \n                            <img src={listing?.creator_img} />\n                            \n                        </div>\n                        <div className=\"listing-info-creator-name\">\n                            \n                            <h5>{listing?.creator}</h5>\n                            <h4>Seller  ✓</h4>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"listing-info-paypal\" ref={paypal}>\n                   {/* Paypal */}\n                </div>\n\n                <div className=\"listing-info-like\">\n                    <button \n                        className={`listing-info-like-button ${liked && \"liked\"}`} \n                        onClick={user ? toggleLike : setToggleTooltip}\n                    >\n                    \n                        <Lottie\n                            options={{\n                                loop: false,\n                                autoplay: false,\n                                animationData: like,\n                                rendererSettings: {\n                                    preserveAspectRatio: 'xMidYMid slice'\n                                }\n                            }}\n                            height=\"35px\"\n                            width=\"35px\"\n                            isStopped={isStopped}\n                        />\n                        <span className=\"listing-info-like-text\"><h5>{likes} Likes</h5></span>\n                    </button>\n                </div>\n\n                {/* Comments */}\n                <div className=\"comments-section\">\n                    <div className=\"comments-show\">\n                        {listingComments?.map((comment, key) => {\n                            const commentId = comment?.id\n                            return (\n                                <div key={key} className=\"comment-comment\">\n                                    {/* Delete Modal */}\n                                    {deleteModalOn &&\n                                    <motion.div className=\"delete-modal-backdrop\" onClick={() => setDeleteModal(!deleteModalOn)}>\n                                        <motion.div className=\"delete-modal-overlay\"\n                                            initial={{opacity: 0, scale: 0}}\n                                            animate={{opacity: 1, scale: 1}}\n                                            transition={{type: 'spring', bounce: 1, duration: 0.2}}\n                                            exit={{opacity: 0, scale: 0}}\n                                        >\n                                            <motion.div>\n                                                <h3>Are you sure you want to delete this comment?</h3>\n                                            </motion.div>\n                                            <motion.div className=\"delete-modal-overlay-bottom\">\n                                                <button className=\"delete-modal-yes\" onClick={() => handleCommentDelete(commentId)} >Yes</button>\n                                                <button className=\"button-secondary\" onClick={() => setDeleteModal(false)}>No</button>\n                                            </motion.div>\n                                        </motion.div>\n                                    </motion.div>\n                                    }\n                                    {/* ------------ */}\n\n                                    {/* Comment delete */}\n                                    {(comment?.creator === user?.username) &&\n                                    <div className=\"comment-top-delete\">\n                                        <img \n                                            className=\"comment-delete-button\"\n                                            onClick={ () =>\n                                                setDeleteModal(true)\n                                            }\n                                            src={deleteSvg}\n                                        />\n                                    </div>\n                                    }\n\n                                    <div className=\"comment-body\">\n                                        <p>{comment?.content}</p>\n                                    </div>\n\n                                    <div className=\"comment-bottom\">\n                                        <div className=\"comment-user\">\n                                            <div className=\"comment-pic\">\n                                                <Link to={`/profile/${comment?.creator}`}>\n                                                    <img \n                                                        className=\"comment-comment-img\"\n                                                        src={comment?.creator_img}\n                                                    />\n                                                </Link>\n                                            </div>\n                                            <div className=\"comment-name\">\n                                                <h6>{comment?.creator}</h6>\n                                                {(comment?.creator === listing?.creator) && \n                                                    <h4>Seller  ✓</h4>\n                                                }\n                                            </div>\n                                        </div>\n                                        <div className=\"comment-date\"><h6>{moment(`${comment?.date_created}`).format('lll')}</h6></div>\n                                    </div>\n                                </div>\n                            );\n                            })}\n                    </div>\n                    <div className=\"comments-input\">\n                        <form onSubmit={handleComment}>\n                            <textarea \n                                className=\"input-box\" \n                                placeholder={ user ? \"Comments must be at least 10 characters long.\" : \"Please sign in to comment\" } \n                                value={newComment} \n                                onChange={(event) => {\n                                    setNewComment(event.target.value)\n                                }} \n                            />\n                            { user \n                            ? \n                            ( newComment.length > 9\n                                ?\n                                <button \n                                    className=\"button-primary\"\n                                    type=\"submit\"\n                                >\n                                    Submit\n                                </button>\n                                :\n                                <div className=\"button-primary-null\">\n                                    Submit\n                                </div>\n                            )\n                            : \n                            <Link to='/login'>\n                                <button \n                                    className=\"button-secondary\"\n                                >\n                                    Sign-in\n                                </button>\n                            </Link>\n                            }\n                        </form>\n                    </div>\n                </div>\n            </div>    \n        </motion.div>\n        }\n       </>\n    )\n}\n\nexport default ListingInfoPage","/Users/eskimo/Coding/Lime-market/client/src/routes/ListingsPage.js",["144","145","146","147","148","149","150"],"import { useState, useEffect, useMemo, useContext } from 'react'\nimport Pagination from '../pagination/Pagination'\nimport Listing from '../components/Listing'\nimport Loading from '../components/Loading'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { motion} from 'framer-motion'\nimport { getListings } from '../actions/actions'\nimport { fetchListings } from '../api/api'\n\nconst ListingsPage = () => {\n  const dispatch = useDispatch()\n  const [loading, setLoading] = useState(true)\n  const listings = useSelector(state => state.listings)\n  const [currentPage, setCurrentPage] = useState(1)\n  const PageSize = 6\n\n  useEffect(() => {\n    dispatch(getListings())\n  }, [])\n\n  const currentData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return listings?.slice(firstPageIndex, lastPageIndex);\n  }, [listings, currentPage]);\n\n  console.log(listings)\n  console.log(currentData)\n\n  \n\n  return (\n      currentData?.length > 0\n        ? (\n        <>\n        <div className=\"listings-grid\">\n          {currentData.map(listing => \n            <Listing listing={listing} currentPage={currentPage} />\n          )}\n        </div>\n\n        <Pagination\n          className=\"pagination-bar\"\n          currentPage={currentPage}\n          totalCount={listings?.length}\n          pageSize={PageSize}\n          onPageChange={page => setCurrentPage(page)}\n        />\n        </>\n        )\n        : (\n        <>\n        {/* skeleton loading */}\n        <div className=\"listings-grid\">\n          {/* create array from length of PageSize and map to div element */}\n          {Array.from({length: PageSize}, (item, index) =>\n            <div className=\"listing-skeleton\">\n              <div className=\"listing-img-div skeleton skeleton-img\">\n              </div>\n              <div className=\"listing-skeleton-text\">\n                <div className=\"skeleton skeleton-text\"></div>\n                <div className=\"skeleton skeleton-text\"></div>\n                <div className=\"skeleton skeleton-text\"></div>\n                <div className=\"skeleton skeleton-text\"></div>\n                <div className=\"skeleton skeleton-text\"></div>\n                <div className=\"skeleton skeleton-text\"></div>\n              </div>\n            </div>\n          )}\n        </div>\n        </>\n        )  \n  )\n}\n\nexport default ListingsPage\n","/Users/eskimo/Coding/Lime-market/client/src/components/Navbar.js",["151","152","153","154","155"],"import { useState, useEffect, useContext } from \"react\";\nimport { motion, AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\nimport LoginButton from \"./LoginButton\";\nimport LogoutButton from \"./LogoutButton\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../assets/logo.svg\";\nimport deleteSvg from \"../assets/delete.svg\";\nimport goSvg from \"../assets/go.svg\";\nimport sidebarCloseSvg from \"../assets/sidebarclose.svg\";\nimport MenuButton from \"./MenuButton\";\nimport { UserContext } from \"../App\";\nimport axios from \"axios\";\n\nconst Navbar = () => {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\n  console.log(currentUser);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [profileOpen, setProfileOpen] = useState(false);\n\n  console.log(\"user\", user);\n\n  const logoutAll = () => {\n    sessionStorage.removeItem(\"token\");\n    sessionStorage.removeItem(\"user\");\n    setCurrentUser(null);\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <nav className=\"nav-container\">\n        <div className=\"nav\">\n          <div className=\"nav-left\">\n            <Link to=\"/\">\n              <motion.img\n                className=\"logo\"\n                src={logo}\n                initial={{ y: -20, opacity: 0 }}\n                animate={{ y: 0, opacity: 1 }}\n                transition={{ delay: 0.25, duration: 0.25 }}\n              ></motion.img>\n            </Link>\n            <motion.h1\n              initial={{ y: -20, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              transition={{ delay: 0.5, duration: 0.25 }}\n            >\n              Lime Market\n            </motion.h1>\n          </div>\n\n          <MenuButton\n            menuOpen={menuOpen}\n            toggle={() => setMenuOpen(!menuOpen)}\n          />\n\n          {menuOpen &&\n          <motion.div className=\"mobile-menu-backdrop\" onClick={() => setMenuOpen(!menuOpen)}>\n            {/*  */}\n          </motion.div>\n          }\n          \n          <AnimatePresence>\n          {menuOpen && (\n            <motion.div\n              layout\n              className=\"mobile-menu\"\n              initial={{x: 100, opacity: 0 }}\n              animate={{x: 0, opacity: 1 }}\n              transition={{bounce: 0}}\n              exit={{x: 100, opacity: 0}}\n            >\n              <motion.div layout className=\"mobile-menu-top\">\n                <Link to=\"/listings\">\n                  <motion.button className=\"listings-nav-btn-mobile\">Listings</motion.button>\n                </Link>\n                <motion.span className=\"span-mobile-menu\" />\n                <Link to=\"/form\">\n                  <motion.button className=\"sell-nav-btn-mobile\">Sell Now</motion.button>\n                </Link>\n                <span className=\"span-mobile-menu\" />\n              </motion.div>\n              {user || currentUser ? (\n                <>\n                  <motion.div layout className=\"mobile-menu-profile\">\n                    <motion.div className=\"mobile-menu-profile-left\">\n                      <img\n                        className=\"profile-mobile\"\n                        src={currentUser?.profile_img || user?.profile_img}\n                      />\n                    </motion.div>\n                    <motion.div className=\"mobile-menu-profile-right\">\n                      <h5>Signed in as: </h5>\n                      <h4>{currentUser?.username || user?.username}</h4>\n                    </motion.div>\n                  </motion.div>\n                  \n                  <motion.div className=\"mobile-menu-bottom-logout\">\n                    <Link className=\"mobile-menu-profile-link\" to={`/profiles/${user?.username}`}>\n                    <button className=\"profile-btn-mobile\">\n                      My Profile\n                    </button>\n                    </Link>\n                    <LogoutButton logoutAll={logoutAll} />\n                  </motion.div>\n                  <span className=\"span-mobile-menu\" />\n\n                  <motion.div className=\"mobile-menu-liked\">\n                    <motion.div className=\"watchlist-h\"> \n                      <h2>Watchlist</h2>\n                    </motion.div>\n                    <motion.div layout className=\"watchlist-items\">\n                      {currentUser?.watchlist.map((listing) => {\n                        return <WatchlistListing listing={listing} />;\n                      })}\n                    </motion.div>\n                  </motion.div>\n                </>\n              ) : (\n                <LoginButton />\n              )}\n            </motion.div>\n          )}\n          </AnimatePresence>\n\n          <div className=\"nav-right-desktop\">\n            <Link to=\"/listings\">\n              <button className=\"listings-nav-btn\">Listings</button>\n            </Link>\n            <Link to=\"/form\">\n              <button className=\"sell-nav-btn\">Sell Now</button>\n            </Link>\n\n            {user || currentUser ? (\n              <>\n                <motion.img\n                  className=\"profile\"\n                  src={currentUser?.profile_img || user?.profile_img}\n                  onClick={() => setProfileOpen(!profileOpen)}\n                  initial={{ y: -20, opacity: 0 }}\n                  animate={{ y: 0, opacity: 1 }}\n                  transition={{ delay: 1.25, duration: 0.25 }}\n                ></motion.img>\n\n                <div className={`profile-menu ${profileOpen && \"open\"}`}>\n                  <div className=\"profile-menu-close\">\n                    <img\n                      className=\"profile-menu-close-btn\"\n                      src={sidebarCloseSvg}\n                      onClick={() => setProfileOpen(!profileOpen)}\n                    />\n                  </div>\n                  <div className=\"profile-menu-user-top\">\n                    <h5>Signed in as:</h5>\n                    <h5 className=\"bold\">\n                      {currentUser?.username || user?.username}\n                    </h5>\n                  </div>\n                  <div className=\"profile-menu-user-bottom\">\n                    <Link to={`/profile/${currentUser?.username}`}>\n                      <button className=\"profile-btn\">My Profile</button>\n                    </Link>\n                    <LogoutButton logoutAll={logoutAll} />\n                  </div>\n                  <div className=\"profile-menu-watchlist\">\n                    <div className=\"watchlist-h\">\n                      <h2>Watchlist</h2>\n                    </div>\n                    <motion.div layout className=\"watchlist-items\">\n                      { currentUser?.watchlist.length > 0 &&\n                      currentUser?.watchlist.map((listing) => {\n                        return <WatchlistListing listing={listing} />;\n                      })}\n                    </motion.div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <LoginButton />\n            )}\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;\n\nfunction WatchlistListing({ listing }) {\n  const {currentUser, setCurrentUser} = useContext(UserContext)\n  const token = sessionStorage.getItem('token')\n\n  const [removeOpen, setRemoveOpen] = useState(false);\n  const listingId = listing.id\n  const [listingData, setListingData] = useState()\n  console.log(listingId)\n  const [likes, setLikes] = useState()\n\n  const toggleRemove = () => setRemoveOpen(!removeOpen);\n\n  const remove = () => {\n    axios\n      .patch(\n        `http://localhost:8000/listings/${listingId}/like`,\n        {\n          like_count: likes - 1,\n        },\n        {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        }\n      )\n      .then(() => {\n        const newWatchlist = currentUser?.watchlist;\n        const index = newWatchlist.findIndex(\n          (l) => l.id == listingId.toString()\n        );\n        if (index > -1) {\n          newWatchlist.splice(index, 1);\n        }\n        console.log(newWatchlist);\n\n        return axios.patch(\n          `http://localhost:8000/users/update/${currentUser?.username}`,\n          {\n            watchlist: newWatchlist,\n          },\n          {\n            headers: {\n              Authorization: `Token ${token}`,\n            },\n          }\n        );\n      })\n      .then(() => {\n        return axios\n          .get(`http://localhost:8000/users/view/${currentUser?.username}`)\n          .then((response) => {\n            sessionStorage.setItem(\"user\", JSON.stringify(response.data));\n            setCurrentUser(response.data);\n          });\n      })\n      // .then(() => {\n      //   return axios\n      //     .get(`http://localhost:8000/listings/${listingId}/likeCount`)\n      //     .then((response) => {\n      //       setLikes(response.data.like_count);\n      //       setIsStopped(!isStopped);\n      //       setLiked(!liked);\n      //     });\n      // });\n  };\n\n  useEffect(() => {\n    const getListing = () => {\n      axios.get(`http://localhost:8000/listings/${listingId}`)\n      .then(response => {\n        setListingData(response.data)\n      })\n    }\n    const getLikes = () => {\n      const listingId = listing.id\n      axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n      .then(response => {\n          setLikes(response.data.like_count)\n      })\n    }\n    getListing()\n    getLikes()\n    console.log(listingData)\n  }, [currentUser])\n\n  return (\n    <motion.div layout className=\"watchlist-listing\"\n      initial={{ opacity: 0, y: 10}}\n      animate={{\n        opacity: 1,\n        y: 0,\n        transition: { duration: 0.2 },\n      }}\n      exit={{ opacity: 0 }}\n    >\n      <motion.div layout className=\"watchlist-listing-initial\">\n        <motion.div className=\"watchlist-listing-img\">\n          <motion.img src={listingData?.image1}></motion.img>\n        </motion.div>\n        <motion.div className=\"watchlist-listing-info\">\n          <motion.h4 className=\"watchlist-title\">{listingData?.title}</motion.h4>\n          <motion.h4 className=\"watchlist-price\">${listingData?.price}</motion.h4>\n        </motion.div>\n        <motion.div className=\"watchlist-listing-buttons\">\n          <motion.a>\n            <motion.img src={deleteSvg} onClick={toggleRemove}></motion.img>\n          </motion.a>\n          <Link to={`/listings/${listingData?.id}`}>\n            <motion.img src={goSvg}></motion.img>\n          </Link>\n        </motion.div>\n      </motion.div>\n\n      <AnimatePresence>\n        {removeOpen && (\n          <motion.div\n            layout\n            className=\"watchlist-listing-bottom\"\n            initial={{ opacity: 0 }}\n            animate={{\n              opacity: 1,\n              transition: { duration: 0.5, delayChildren: 1.5 },\n            }}\n            exit={{ opacity: 0 }}\n          >\n            {/* <motion.div layout className=\"watchlist-listing-bottom-text\">\n            <motion.h5 className=\"watchlist-listing-bottom-text-h\" layout>Are you sure?</motion.h5>\n          </motion.div> */}\n            <motion.div className=\"watchlist-listing-bottom-buttons\">\n              <motion.button \n                className=\"watchlist-listing-bottom-buttons-remove\"\n                onClick={remove}\n              >\n                Remove\n              </motion.button>\n              <motion.button\n                className=\"watchlist-listing-bottom-buttons-cancel\"\n                onClick={toggleRemove}\n              >\n                Cancel\n              </motion.button>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.div>\n  );\n}\n","/Users/eskimo/Coding/Lime-market/client/src/routes/LoginPage.js",["156","157","158"],"import React, { useState, useContext } from 'react'\nimport { motion } from 'framer-motion'\nimport axios from 'axios'\nimport { Link, useHistory } from 'react-router-dom' \nimport loginSvg from '../assets/login.svg'\nimport ClipLoader from 'react-spinners/ClipLoader'\nimport { UserContext } from '../App'\n\nfunction LoginPage() {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    // const [fixPassword, setFixPassword] = useState(false)\n    const [invalidLogin, setInvalidLogin] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n    const {currentUser, setCurrentUser} = useContext(UserContext)\n    const user = sessionStorage.getItem('user')\n\n    const loginCredentials = {\n        username: username,\n        password: password,\n    }\n\n    // const fetchWatchlist = () => {\n    //     // Object.keys(user.watchlist).map(key => {\n    //     //     axios.get('http://localhost:8000/listings/')\n    //     // })\n    //     let newWatchlist = [] \n    //     for (let listing in user?.watchlist) {\n    //         axios.get(`http://localhost:8000/listings/${user?.watchlist[listing]}`)\n    //         .then(response => {\n    //             newWatchlist.push({\n    //                 id: response.data.id,\n    //                 img: response.data.image1,\n    //                 title: response.data.title,\n    //                 price: response.data.price\n    //             })\n    //         })\n    //     }\n    //     localStorage.setItem('watchlist', newWatchlist)\n    // }\n\n    const handleSubmit = async(e) => {\n        e.preventDefault()\n        setLoading(true)\n        \n        await axios\n            .post('http://localhost:8000/auth/', {\n                username: `${loginCredentials.username}`,\n                password: `${loginCredentials.password}`\n            })\n            .then(async(response) => {\n                console.log(response.data.token)\n                sessionStorage.setItem('token', response.data.token)\n\n                await axios\n                    .get(`http://localhost:8000/users/view/${username}`)\n                    .then((response) => {\n                        console.log(response)\n                        setCurrentUser(response.data)\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                        console.log(currentUser)\n                    })\n                \n                setLoading(false)\n                history.goBack()\n            })\n            .catch((error) => {\n                console.log(error)\n                setInvalidLogin(true)\n                // console.log(invalidLogin)\n                setLoading(false)\n                return\n            })\n    }\n\n    return(\n        <>\n        <motion.div className=\"page-wrapper\"\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ delay: 0.5, duration: 0.25 }}\n        >\n            <div className=\"login-div\">\n                <div className=\"login-bg\">\n                    <img src={loginSvg} className=\"login-svg\" />\n                </div>\n                <div className=\"login-form-div\">\n                    <div className=\"login-form-title\">\n                        <h1>Welcome Back!</h1>\n                    </div>\n                    <div>\n                        <form className=\"login-form\" onSubmit={handleSubmit}>\n                            <label>\n                                <h5>Username:</h5>\n                                <input \n                                    type=\"text\" \n                                    value={username} \n                                    onChange={e => \n                                        setUsername(e.target.value)\n                                    } \n                                />\n                            </label>\n                            <label>\n                                <h5>Password:</h5>\n                                <input \n                                    type=\"password\" \n                                    value={password} \n                                    onChange={e =>\n                                        setPassword(e.target.value)\n                                    } \n                                />\n                            </label>\n                            <div className='errors-bottom'>\n                                {invalidLogin \n                                    ? (<p className=\"invalid\">There is no account with those credentials. Try again.</p>)\n                                    : null\n                                }\n                            </div>\n                                {loading\n                                ?  \n                                <div className=\"button-secondary center-button\">\n                                    Log-in \n                                    <ClipLoader color='grey' loading={loading} size={15} />\n                                </div>\n                                :  \n                                <button className=\"button-primary\" type=\"submit\" value=\"Submit\">\n                                    Log-in\n                                </button>\n                                }   \n                        </form>\n                    </div>\n                    <div className=\"login-bottom\">\n                        <h5>New Here?</h5>\n                        <Link to='/register'>\n                            <a>Create an account</a>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </motion.div>\n        </>\n    )\n}\n\nexport default LoginPage\n","/Users/eskimo/Coding/Lime-market/client/src/routes/ProfilePage.js",["159","160"],"import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport Listing from '../components/Listing'\n\nimport { motion, AnimateSharedLayout} from 'framer-motion'\nimport axios from 'axios';\n\nconst Profile = () => {\n  const { userId } = useParams()\n  const [userImg, setUserImg] = useState('')\n  const [userListings, setUserListings] = useState([])\n\n  useEffect(() => {\n    axios.get(`http://localhost:8000/users/view/${userId}`)\n      .then(response => {\n        console.log(response)\n        setUserImg(response.data.profile_img)\n        setUserListings(response.data.listings_created)\n      })\n  }, [])\n\n  return (\n    <div className=\"profile-info-container\">\n      <motion.div className=\"profile-info\"\n        initial={{ y: 20, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        exit={{ y: -20, opacity: 0 }}\n        transition={{ delay: 0.5, duration: 0.25 }}\n      >\n        <div className=\"profile-info-img\">\n          <img src={userImg} alt={userId} />\n        </div>\n        <div className=\"profile-info-name\">\n          <h2>{userId}</h2>\n        </div>\n        <div className=\"profile-info-listings-label\">\n          <h1>User Listings</h1>\n        </div>\n        <div className=\"profile-info-listings-cards\">\n          {userListings.map(userListing => \n            <Listing listing={userListing} />\n          )}\n          { (userListings.length === 0) && \n            <p>No listings yet!</p>\n          }\n        </div>\n      </motion.div>\n    </div>\n  )\n}\n\nexport default Profile","/Users/eskimo/Coding/Lime-market/client/src/routes/FormPage.js",["161"],"/Users/eskimo/Coding/Lime-market/client/src/components/Tooltip.js",["162"],"import \"../css/Tooltip.css\";\nimport loginPlease from '../assets/loginplease.svg'\nimport {Link} from 'react-router-dom'\n\nexport default function Tooltip({ content, toggleTooltip, setToggleTooltip }) {\n    const toggle = () => {\n        setToggleTooltip(!toggleTooltip);\n    };\n    \n    return (\n        <>\n            <div className={`modal-backdrop ${toggleTooltip && \"modal-backdrop-show\"}`} onClick={toggle}>\n                <div className={`tooltip-content ${toggleTooltip && \"tooltip-content-open\"}`}>\n                    <p>{content}</p>\n                    <img src={loginPlease} />\n                    <Link to=\"/login\">\n                        <button className=\"button-primary\">\n                            Log-in\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </>\n  );\n}","/Users/eskimo/Coding/Lime-market/client/src/reducers/listings.js",[],"/Users/eskimo/Coding/Lime-market/client/src/reducers/listing.js",[],"/Users/eskimo/Coding/Lime-market/client/src/reducers/comments.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/Listing.js",["163","164","165","166","167","168"],"import {useEffect, useState, useContext} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { motion } from 'framer-motion'\nimport Lottie from 'react-lottie-segments'\nimport like from '../assets/like.json'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Tooltip from '../components/Tooltip.js';\nimport { UserContext } from '../App'\n\nconst Listing = ({listing, currentPage}) => {\n    const listingId = listing.id.toString()\n    const user = JSON.parse(sessionStorage.getItem('user'))\n    console.log(user)\n    const {currentUser, setCurrentUser} = useContext(UserContext)\n    console.log(currentUser)\n    const token = sessionStorage.getItem('token')\n    const history = useHistory()\n    // const likedBool = currentUser?.watchlist.some(listing => listing.id === listingId.toString())\n    // console.log(likedBool)\n    const [toggle, setToggle] = useState(false)\n    const [likes, setLikes] = useState()\n    const [liked, setLiked] = useState()\n    const [isStopped, setIsStopped] = useState(true)\n    console.log(listing)\n    const toggleLike = () => {\n        if (!liked) {\n            axios.patch(`http://localhost:8000/listings/${listingId}/like`, \n                {\n                    like_count: likes + 1\n                },\n                {\n                    headers: {\n                        'Authorization': `Token ${token}`\n                    }\n                }\n            )\n            .then(() => {\n                console.log(user?.watchlist)\n                let newWatchlist = Object.values(user?.watchlist)\n                const index = newWatchlist.length\n                newWatchlist[index] = {\n                    id: listingId,\n                    img: listing.image1,\n                    title: listing.title,\n                    price: listing.price\n                }\n                return axios.patch(`http://localhost:8000/users/update/${user.username}`, \n                    {\n                        watchlist: newWatchlist\n                    },\n                    {\n                        headers: {\n                            'Authorization': `Token ${token}`\n                        }\n                    }    \n                )\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/users/view/${user.username}`)\n                    .then((response) => {\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                        setCurrentUser(response.data)\n                        getLikes(listingId)\n                    })\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n                    .then(response => {\n                        setLikes(response.data.like_count)\n                        setIsStopped(!isStopped)\n                        setLiked(!liked)\n                    })\n            })\n        } else if (liked) {\n            axios.patch(`http://localhost:8000/listings/${listingId}/like`, \n                {\n                    like_count: likes - 1\n                },\n                {\n                    headers: {\n                        'Authorization': `Token ${token}`\n                    }\n                }\n            )\n            .then(() => {\n                const newWatchlist = user?.watchlist\n                const index = newWatchlist.findIndex(l => l.id == listingId.toString())\n                if (index > -1) {\n                    newWatchlist.splice(index, 1)\n                }\n                return axios.patch(`http://localhost:8000/users/update/${user.username}`, \n                    {\n                        watchlist: newWatchlist\n                    },\n                    {\n                        headers: {\n                            'Authorization': `Token ${token}`\n                        }\n                    }    \n                )\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/users/view/${user.username}`)\n                    .then((response) => {\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                        setCurrentUser(response.data)\n                    })\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n                    .then(response => {\n                        setLikes(response.data.like_count)\n                        setIsStopped(!isStopped)\n                        setLiked(!liked)\n                    })\n            })\n        }\n    }\n\n    const getLikes = (listing_id) => {\n        axios.get(`http://localhost:8000/listings/${listing_id}/likeCount`)\n        .then(response => {\n            setLikes(response.data.like_count)\n        })\n    }\n\n    useEffect(() => {\n        getLikes(listingId)\n        if (user) {\n            const likedBool = user?.watchlist.some(listing => listing.id === listingId.toString())\n            setIsStopped(!likedBool)\n            setLiked(likedBool)\n        }\n    }, [currentUser, currentPage])\n    \n    \n    return (\n        <>\n        \n        <motion.div \n            className=\"listing\"\n            initial={{ y: 0, opacity: 0 }}\n            animate={{ y: -10, opacity: 1 }}\n            transition={{ delay: 0.5, duration: 0.25 }}\n        >\n            {/* listing image */}\n            <div className=\"listing-img-div\">\n                <img src={listing.image1} />\n            </div>\n\n            {/* title, price, details btn */}\n            <div className=\"listing-title\">\n                <h3>{listing.title}</h3>\n            </div>\n            <div className=\"listing-price\">\n                <h3>${listing.price}</h3>\n            </div>\n            <div className=\"listing-like\">\n                \n                    <button \n                        className={`listing-info-like-button ${liked && \"liked\"}`}\n                        onClick={user ? toggleLike : setToggle}\n                    >\n                        <Lottie\n                            options={{\n                                loop: false,\n                                autoplay: false,\n                                animationData: like,\n                                rendererSettings: {\n                                    preserveAspectRatio: 'xMidYMid slice'\n                                }\n                            }}\n                            height=\"35px\"\n                            width=\"35px\"\n                            isStopped={isStopped}\n                        />\n                        <span className=\"listing-info-like-text\"><h5>{likes} Likes</h5></span>\n                    </button>\n            </div>\n            <div className=\"listing-btn\">\n                {/* <Link to={`listings/${listingId}`}> */}\n                    <button className=\"button-primary\" \n                        onClick={() => {\n                        history.push(`/listings/${listingId}`)\n                        }}\n                    >Details</button>\n                {/* </Link> */}\n            </div>\n        </motion.div>\n        \n        </>\n    )\n}\n\nexport default Listing\n","/Users/eskimo/Coding/Lime-market/client/src/components/Loading.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/LoginButton.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/LogoutButton.js",["169"],"import { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = (props) => {\n  return (\n    <button className=\"logout-btn\" onClick={props.logoutAll}>\n      Log Out\n    </button>\n  );\n};\n\nexport default LogoutButton;","/Users/eskimo/Coding/Lime-market/client/src/components/MenuButton.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/ListingForm.js",["170","171","172","173","174","175","176","177","178","179","180","181"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport priceTagSvg from \"../assets/pricetag.svg\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nimport { setCurrentListing } from \"../actions/actions\";\nimport axios from \"axios\";\nimport { UserContext } from \"../App\";\n\nconst ListingForm = () => {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\n  const token = sessionStorage.getItem(\"token\");\n  const [listingData, setListingData] = useState({\n    title: \"\",\n    price: 0,\n    description: \"\",\n  });\n  const [listingImages, setListingImages] = useState({});\n  console.log(listingData);\n  console.log(listingImages);\n  const [loading, setLoading] = useState(false);\n\n  // const [files, setFiles] = useState({})\n  // console.log(files)\n  const currentListing = useSelector((state) => state.currentListing);\n  console.log(currentListing);\n  const [currentListingImages, setCurrentListingImages] = useState();\n  const listingId = currentListing?.id;\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(false);\n  const [redirectId, setRedirectId] = useState(\"\");\n\n  const [errors, setErrors] = useState({\n    title: \"\",\n    price: \"\",\n    description: \"\",\n    image: \"\",\n  });\n  console.log(errors);\n  // useEffect(() => {\n  //     currentListing &&\n  //     setRedirectId(currentListing)\n  //     setListingData({ ...listingData, title: listing?.title, description: listing?.description, price: listing?.price, selectedFile: listing?.selectedFile })\n  // }, [currentListing])\n\n  const clear = () => {\n    dispatch(setCurrentListing([]));\n    setListingData({ title: \"\", description: \"\", price: \"\", selectedFile: \"\" });\n  };\n\n  const validate = () => {\n    // Error checks\n    let titleError = null;\n    let priceError = null;\n    let descriptionError = null;\n    let imageError = null;\n\n    if (listingData.title.length < 5) {\n      titleError = \"Title must be at least 5 characters long\";\n    }\n    if (parseInt(listingData.price) < 1 || listingData.price.length === 0) {\n      priceError = \"Price must be at least $1 (dollar)\";\n    }\n    if (\n      (listingData.description.length < 10) |\n      (listingData.description.length > 100)\n    ) {\n      descriptionError =\n        \"Description must be between 10 and 100 characters long\";\n    }\n    if (listingImages.length < 1) {\n      imageError = \"At least one image must be uploaded\";\n    }\n    if (titleError || priceError || descriptionError || imageError) {\n      setErrors({\n        title: titleError,\n        price: priceError,\n        description: descriptionError,\n        image: imageError,\n      });\n      return false;\n    }\n\n    return true;\n  };\n  // const axiosInstance = axios.create({\n  //     timeout: 5000,\n  //     headers: {\n  //         ,\n  //         Accept: '*/*',\n  //     },\n  // })\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    validate()\n    let formData = new FormData();\n    formData.append(\"title\", listingData.title);\n    formData.append(\"description\", listingData.description);\n    formData.append(\"price\", parseInt(listingData.price));\n    for (let image in listingImages) {\n      formData.append(`image${parseInt(image) + 1}`, listingImages[image]);\n    }\n\n    // formData.append('image1', listingImages.image1)\n    // formData.append('image2', listingImages.image2)\n    // formData.append('image3', listingImages.image3)\n    // formData.append('image4', listingImages.image4)\n    formData.append(\"creator\", user?.username);\n    formData.append(\"creator_img\", user?.profile_img);\n\n    const updatedListings = currentUser?.listings_created.filter(\n      (listing) => listing.id !== listingId\n    );\n\n    if (currentListing.length === 0) {\n      axios\n        .post(\"http://localhost:8000/listings/create\", formData, {\n          headers: {\n            Authorization: `Token ${token}`,\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        })\n        .then(async (response) => {\n          console.log(response);\n          setRedirectId(response.data.id);\n          const userListings = [...user?.listings_created, response.data];\n          await axios.patch(\n            `http://localhost:8000/users/update/${user?.username}`,\n            {\n              listings_created: userListings,\n            },\n            {\n              headers: {\n                Authorization: `Token ${token}`,\n              },\n            }\n          );\n        })\n        .then(() => {\n          clear();\n          setLoading(false);\n          setRedirect(true);\n        })\n        .catch((error) => {\n          setLoading(false);\n        });\n    } else {\n      // Remove listing to edit from user data listings_created\n      axios\n        .patch(\n          `http://localhost:8000/users/update/${user?.username}`,\n          {\n            listings_created: updatedListings,\n          },\n          {\n            headers: {\n              Authorization: `Token ${token}`,\n            },\n          }\n        )\n        // .then(async() => {\n        //     await axios.get(`http://localhost:8000/users/view/${user?.username}`)\n        // })\n        .then(async (response) => {\n          console.log(response);\n          console.log(user);\n          await axios\n            .patch(\n              `http://localhost:8000/listings/update/${listingId}`,\n              formData,\n              {\n                headers: {\n                  Authorization: `Token ${token}`,\n                  \"Content-Type\": \"multipart/form-data\",\n                },\n              }\n            )\n            .then(async (response) => {\n              console.log(response);\n              // setRedirectId(response.data.id.toString())\n              const userListings = [...updatedListings, response.data];\n              await axios\n                .patch(\n                  `http://localhost:8000/users/update/${user?.username}`,\n                  {\n                    listings_created: userListings,\n                  },\n                  {\n                    headers: {\n                      Authorization: `Token ${token}`,\n                    },\n                  }\n                )\n                .then((response) => {\n                  sessionStorage.setItem(\"user\", JSON.stringify(response.data));\n                  setRedirectId(listingId);\n                })\n                .then(() => {\n                  clear();\n                  setCurrentUser(JSON.parse(sessionStorage.getItem(\"user\")));\n                  setLoading(false);\n                  setRedirect(true);\n                  // window.location.reload()\n                });\n            });\n        })\n        .catch((error) => {\n          setLoading(false);\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (currentListing.length !== 0) {\n      let imageURLs = [\n        currentListing?.image1,\n        currentListing?.image2,\n        currentListing?.image3,\n        currentListing?.image4,\n      ];\n      imageURLs = imageURLs.filter((el) => el !== null);\n      console.log(imageURLs);\n      let images = {};\n      imageURLs?.forEach(async (el, i) => {\n        const imgURL = await fetch(el);\n        console.log(imgURL);\n        const blob = await imgURL.blob();\n        console.log(blob);\n        const fileName = el?.slice(el.lastIndexOf(\"/\") + 1);\n        console.log(fileName);\n        const file = new File([blob], fileName, { type: blob.type });\n        images[i] = file;\n        console.log(images);\n      });\n      // set listingImages state to images object from above\n      setListingImages(images);\n      console.log(listingImages);\n      setListingData({\n        title: currentListing?.title,\n        price: currentListing?.price,\n        description: currentListing?.description,\n      });\n      setCurrentListingImages({\n        image1: currentListing?.image1,\n        image2: currentListing?.image2,\n        image3: currentListing?.image3,\n        image4: currentListing?.image4,\n      });\n    }\n  }, []);\n\n  return (\n    <>\n    <div className=\"form\">\n      <div className=\"form-top\">\n        <img className=\"form-svg-top\" src={priceTagSvg}></img>\n      </div>\n      <div className=\"form-form\">\n        <h1>Create Listing</h1>\n        {redirect && <Redirect to={`/listings/${redirectId}`} />}\n        <form>\n          {/* Title */}\n          <label for=\"title\">\n            <h4>Title:</h4>\n          </label>\n          <input\n            className=\"form-title-input\"\n            id=\"title\"\n            name=\"title\"\n            type=\"text\"\n            value={listingData.title}\n            onChange={(e) =>\n              setListingData({ ...listingData, title: e.target.value })\n            }\n          />\n          <div className=\"error-div\">\n            {<p className=\"error\">{errors.title}</p>}\n          </div>\n\n          {/* Price */}\n          <label for=\"price\">\n            <h4>Price:</h4>\n          </label>\n          <div className=\"form-input\">\n            <h2>$</h2>\n            <input\n              className=\"form-price-input\"\n              id=\"price\"\n              name=\"price\"\n              type=\"number\"\n              placeholder=\"Price\"\n              value={listingData.price}\n              onChange={(e) =>\n                setListingData({ ...listingData, price: e.target.value })\n              }\n            />\n          </div>\n          <div className=\"error-div\">\n            {<p className=\"error\">{errors.price}</p>}\n          </div>\n\n          {/* Description */}\n          <label for=\"description\">\n            <h4>Description:</h4>\n          </label>\n          <textarea\n            className=\"form-desc-textarea\"\n            id=\"description\"\n            name=\"description\"\n            value={listingData.description}\n            onChange={(e) =>\n              setListingData({ ...listingData, description: e.target.value })\n            }\n          />\n          <div className=\"error-div\">\n            {<p className=\"error\">{errors.description}</p>}\n          </div>\n\n          {/* Image File Upload */}\n          <label for=\"files\">\n            <h4>Images:</h4>\n          </label>\n          <input\n            className=\"file-input\"\n            type=\"file\"\n            id=\"files\"\n            name=\"files\"\n            accept=\"image/png, image/jpeg\"\n            multiple\n            onChange={(event) => {\n              console.log(event.target.files);\n              if (currentListing) {\n                console.log(\"dispatched\");\n                setCurrentListingImages({\n                  image1: null,\n                  image2: null,\n                  image3: null,\n                  image4: null,\n                });\n                console.log(currentListing);\n              }\n              if (event.target.files) {\n                // Empty array to remove previous files onchange\n                listingImages.length = 0;\n                // initialize empty images object\n                let images = {};\n                // add imgfiles to images object\n                for (let file in event.target.files) {\n                  images[file] = event.target.files[file];\n                }\n                // set listingImages state to images object from above\n                setListingImages(images);\n                console.log(listingImages);\n              }\n            }}\n          />\n          <div className=\"error-div\">\n            {<p className=\"error\">{errors.image}</p>}\n          </div>\n\n          {/* Files Preview Div */}\n\n          <h4>Image Preview:</h4>\n          <div className=\"form-files\">\n            {listingImages[0] ? (\n              <img\n                className=\"files-img\"\n                src={URL.createObjectURL(listingImages[0])}\n              />\n            ) : currentListingImages?.image1 ? (\n              <img className=\"files-img\" src={currentListingImages?.image1} />\n            ) : null}\n            {listingImages[1] ? (\n              <img\n                className=\"files-img\"\n                src={URL.createObjectURL(listingImages[1])}\n              />\n            ) : currentListingImages?.image2 ? (\n              <img className=\"files-img\" src={currentListingImages?.image2} />\n            ) : null}\n            {listingImages[2] ? (\n              <img\n                className=\"files-img\"\n                src={URL.createObjectURL(listingImages[2])}\n              />\n            ) : currentListingImages?.image3 ? (\n              <img className=\"files-img\" src={currentListingImages?.image3} />\n            ) : null}\n            {listingImages[3] ? (\n              <img\n                className=\"files-img\"\n                src={URL.createObjectURL(listingImages[3])}\n              />\n            ) : currentListingImages?.image4 ? (\n              <img className=\"files-img\" src={currentListingImages?.image4} />\n            ) : null}\n          </div>\n\n          {/* <input type=\"file\" multiple={true} onChange={(event) => setListingData({ ...listingData, selectedFile: event.target.files[0] })}></input> */}\n              \n          { \n            loading\n            ?\n            <div className=\"button-secondary center-button\">\n              Submit\n              <ClipLoader color=\"grey\" loading={loading} size={15} />\n            </div>\n            :\n            <button\n            className=\"button-primary\"\n            type=\"submit\"\n            style={{ marginTop: 25 }}\n            onClick={handleSubmit}\n            >\n              Submit\n            </button>\n          }\n          \n        </form>\n      </div>\n      <div className=\"form-bg\">\n        <img className=\"form-svg\" src={priceTagSvg}></img>\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default ListingForm;\n","/Users/eskimo/Coding/Lime-market/client/src/routes/SignupPage.js",["182","183","184"],"/Users/eskimo/Coding/Lime-market/client/src/api/api.js",[],"/Users/eskimo/Coding/Lime-market/client/src/pagination/Pagination.js",[],"/Users/eskimo/Coding/Lime-market/client/src/pagination/usePagination.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/EditMenuBackdrop.js",[],"/Users/eskimo/Coding/Lime-market/client/src/reducers/currentListing.js",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":13},{"ruleId":"189","severity":1,"message":"193","line":3,"column":8,"nodeType":"191","messageId":"192","endLine":3,"endColumn":14},{"ruleId":"194","severity":1,"message":"195","line":16,"column":17,"nodeType":"196","endLine":16,"endColumn":59},{"ruleId":"194","severity":1,"message":"195","line":47,"column":17,"nodeType":"196","endLine":47,"endColumn":59},{"ruleId":"189","severity":1,"message":"197","line":2,"column":26,"nodeType":"191","messageId":"192","endLine":2,"endColumn":36},{"ruleId":"189","severity":1,"message":"198","line":11,"column":18,"nodeType":"191","messageId":"192","endLine":11,"endColumn":37},{"ruleId":"189","severity":1,"message":"199","line":14,"column":8,"nodeType":"191","messageId":"192","endLine":14,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":118,"column":64,"nodeType":"202","messageId":"203","endLine":118,"endColumn":66},{"ruleId":"204","severity":1,"message":"205","line":240,"column":8,"nodeType":"206","endLine":240,"endColumn":21,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"208","line":279,"column":8,"nodeType":"206","endLine":279,"endColumn":10,"suggestions":"209"},{"ruleId":"194","severity":1,"message":"195","line":303,"column":25,"nodeType":"196","endLine":303,"endColumn":43},{"ruleId":"194","severity":1,"message":"195","line":316,"column":21,"nodeType":"196","endLine":316,"endColumn":50},{"ruleId":"194","severity":1,"message":"195","line":331,"column":29,"nodeType":"196","endLine":331,"endColumn":63},{"ruleId":"194","severity":1,"message":"195","line":399,"column":41,"nodeType":"196","endLine":405,"endColumn":43},{"ruleId":"194","severity":1,"message":"195","line":417,"column":53,"nodeType":"196","endLine":420,"endColumn":55},{"ruleId":"189","severity":1,"message":"210","line":1,"column":40,"nodeType":"191","messageId":"192","endLine":1,"endColumn":50},{"ruleId":"189","severity":1,"message":"211","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":15},{"ruleId":"189","severity":1,"message":"212","line":8,"column":10,"nodeType":"191","messageId":"192","endLine":8,"endColumn":16},{"ruleId":"189","severity":1,"message":"213","line":10,"column":10,"nodeType":"191","messageId":"192","endLine":10,"endColumn":23},{"ruleId":"189","severity":1,"message":"214","line":14,"column":10,"nodeType":"191","messageId":"192","endLine":14,"endColumn":17},{"ruleId":"189","severity":1,"message":"215","line":14,"column":19,"nodeType":"191","messageId":"192","endLine":14,"endColumn":29},{"ruleId":"204","severity":1,"message":"216","line":21,"column":6,"nodeType":"206","endLine":21,"endColumn":8,"suggestions":"217"},{"ruleId":"189","severity":1,"message":"198","line":2,"column":18,"nodeType":"191","messageId":"192","endLine":2,"endColumn":37},{"ruleId":"194","severity":1,"message":"195","line":88,"column":23,"nodeType":"196","endLine":91,"endColumn":25},{"ruleId":"194","severity":1,"message":"195","line":148,"column":21,"nodeType":"196","endLine":152,"endColumn":23},{"ruleId":"200","severity":1,"message":"201","line":219,"column":23,"nodeType":"202","messageId":"203","endLine":219,"endColumn":25},{"ruleId":"204","severity":1,"message":"218","line":274,"column":6,"nodeType":"206","endLine":274,"endColumn":19,"suggestions":"219"},{"ruleId":"189","severity":1,"message":"220","line":17,"column":11,"nodeType":"191","messageId":"192","endLine":17,"endColumn":15},{"ruleId":"194","severity":1,"message":"195","line":86,"column":21,"nodeType":"196","endLine":86,"endColumn":65},{"ruleId":"221","severity":1,"message":"222","line":136,"column":29,"nodeType":"196","endLine":136,"endColumn":32},{"ruleId":"189","severity":1,"message":"198","line":5,"column":18,"nodeType":"191","messageId":"192","endLine":5,"endColumn":37},{"ruleId":"204","severity":1,"message":"223","line":20,"column":6,"nodeType":"206","endLine":20,"endColumn":8,"suggestions":"224"},{"ruleId":"204","severity":1,"message":"225","line":23,"column":8,"nodeType":"206","endLine":23,"endColumn":10,"suggestions":"226"},{"ruleId":"194","severity":1,"message":"195","line":15,"column":21,"nodeType":"196","endLine":15,"endColumn":46},{"ruleId":"189","severity":1,"message":"227","line":6,"column":10,"nodeType":"191","messageId":"192","endLine":6,"endColumn":14},{"ruleId":"189","severity":1,"message":"228","line":8,"column":8,"nodeType":"191","messageId":"192","endLine":8,"endColumn":15},{"ruleId":"189","severity":1,"message":"229","line":21,"column":12,"nodeType":"191","messageId":"192","endLine":21,"endColumn":18},{"ruleId":"200","severity":1,"message":"201","line":88,"column":64,"nodeType":"202","messageId":"203","endLine":88,"endColumn":66},{"ruleId":"204","severity":1,"message":"230","line":135,"column":8,"nodeType":"206","endLine":135,"endColumn":34,"suggestions":"231"},{"ruleId":"194","severity":1,"message":"195","line":149,"column":17,"nodeType":"196","endLine":149,"endColumn":45},{"ruleId":"189","severity":1,"message":"232","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":18},{"ruleId":"189","severity":1,"message":"197","line":3,"column":20,"nodeType":"191","messageId":"192","endLine":3,"endColumn":30},{"ruleId":"204","severity":1,"message":"233","line":254,"column":6,"nodeType":"206","endLine":254,"endColumn":8,"suggestions":"234"},{"ruleId":"194","severity":1,"message":"195","line":260,"column":9,"nodeType":"196","endLine":260,"endColumn":57},{"ruleId":"194","severity":1,"message":"195","line":370,"column":15,"nodeType":"196","endLine":373,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":375,"column":15,"nodeType":"196","endLine":375,"endColumn":79},{"ruleId":"194","severity":1,"message":"195","line":378,"column":15,"nodeType":"196","endLine":381,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":383,"column":15,"nodeType":"196","endLine":383,"endColumn":79},{"ruleId":"194","severity":1,"message":"195","line":386,"column":15,"nodeType":"196","endLine":389,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":391,"column":15,"nodeType":"196","endLine":391,"endColumn":79},{"ruleId":"194","severity":1,"message":"195","line":394,"column":15,"nodeType":"196","endLine":397,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":399,"column":15,"nodeType":"196","endLine":399,"endColumn":79},{"ruleId":"194","severity":1,"message":"195","line":426,"column":9,"nodeType":"196","endLine":426,"endColumn":53},{"ruleId":"189","severity":1,"message":"235","line":10,"column":12,"nodeType":"191","messageId":"192","endLine":10,"endColumn":23},{"ruleId":"194","severity":1,"message":"195","line":77,"column":21,"nodeType":"196","endLine":77,"endColumn":63},{"ruleId":"221","severity":1,"message":"222","line":129,"column":29,"nodeType":"196","endLine":129,"endColumn":32},"no-native-reassign",["236"],"no-negated-in-lhs",["237"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","'AnimateSharedLayout' is defined but never used.","'LoginButton' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'listingId', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["238"],"React Hook useEffect has missing dependencies: 'listing?.description' and 'listing?.price'. Either include them or remove the dependency array.",["239"],"'useContext' is defined but never used.","'Loading' is defined but never used.","'motion' is defined but never used.","'fetchListings' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["240"],"React Hook useEffect has missing dependencies: 'listing.id', 'listingData', and 'listingId'. Either include them or remove the dependency array.",["241"],"'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["242"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["243"],"'Link' is defined but never used.","'Tooltip' is defined but never used.","'toggle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'listingId' and 'user'. Either include them or remove the dependency array.",["244"],"'useAuth0' is defined but never used.","React Hook useEffect has missing dependencies: 'currentListing?.description', 'currentListing?.image1', 'currentListing?.image2', 'currentListing?.image3', 'currentListing?.image4', 'currentListing.length', 'currentListing?.price', 'currentListing?.title', and 'listingImages'. Either include them or remove the dependency array.",["245"],"'currentUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},"Update the dependencies array to be: [currentUser, dispatch, listingId, user]",{"range":"262","text":"263"},"Update the dependencies array to be: [listing?.description, listing?.price]",{"range":"264","text":"265"},"Update the dependencies array to be: [dispatch]",{"range":"266","text":"267"},"Update the dependencies array to be: [currentUser, listing.id, listingData, listingId]",{"range":"268","text":"269"},"Update the dependencies array to be: [userId]",{"range":"270","text":"271"},"Update the dependencies array to be: [user]",{"range":"272","text":"273"},"Update the dependencies array to be: [currentUser, currentPage, listingId, user]",{"range":"274","text":"275"},"Update the dependencies array to be: [currentListing?.description, currentListing?.image1, currentListing?.image2, currentListing?.image3, currentListing?.image4, currentListing.length, currentListing?.price, currentListing?.title, listingImages]",{"range":"276","text":"277"},[8132,8145],"[currentUser, dispatch, listingId, user]",[9227,9229],"[listing?.description, listing?.price]",[683,685],"[dispatch]",[9410,9423],"[currentUser, listing.id, listingData, listingId]",[629,631],"[userId]",[660,662],"[user]",[5100,5126],"[currentUser, currentPage, listingId, user]",[8111,8113],"[currentListing?.description, currentListing?.image1, currentListing?.image2, currentListing?.image3, currentListing?.image4, currentListing.length, currentListing?.price, currentListing?.title, listingImages]"]