[{"/Users/eskimo/Coding/Hoppang/client/src/components/LoginButton.js":"1","/Users/eskimo/Coding/Lime-market/client/src/index.js":"2","/Users/eskimo/Coding/Lime-market/client/src/App.js":"3","/Users/eskimo/Coding/Lime-market/client/src/actions/actions.js":"4","/Users/eskimo/Coding/Lime-market/client/src/reducers/index.js":"5","/Users/eskimo/Coding/Lime-market/client/src/routes/Home.js":"6","/Users/eskimo/Coding/Lime-market/client/src/routes/ListingInfoPage.js":"7","/Users/eskimo/Coding/Lime-market/client/src/routes/ListingsPage.js":"8","/Users/eskimo/Coding/Lime-market/client/src/components/Navbar.js":"9","/Users/eskimo/Coding/Lime-market/client/src/routes/LoginPage.js":"10","/Users/eskimo/Coding/Lime-market/client/src/routes/ProfilePage.js":"11","/Users/eskimo/Coding/Lime-market/client/src/routes/FormPage.js":"12","/Users/eskimo/Coding/Lime-market/client/src/components/Tooltip.js":"13","/Users/eskimo/Coding/Lime-market/client/src/reducers/listings.js":"14","/Users/eskimo/Coding/Lime-market/client/src/reducers/listing.js":"15","/Users/eskimo/Coding/Lime-market/client/src/reducers/comments.js":"16","/Users/eskimo/Coding/Lime-market/client/src/components/Listing.js":"17","/Users/eskimo/Coding/Lime-market/client/src/components/Loading.js":"18","/Users/eskimo/Coding/Lime-market/client/src/components/LoginButton.js":"19","/Users/eskimo/Coding/Lime-market/client/src/components/LogoutButton.js":"20","/Users/eskimo/Coding/Lime-market/client/src/components/MenuButton.js":"21","/Users/eskimo/Coding/Lime-market/client/src/components/ListingForm.js":"22","/Users/eskimo/Coding/Lime-market/client/src/routes/SignupPage.js":"23","/Users/eskimo/Coding/Lime-market/client/src/api/api.js":"24","/Users/eskimo/Coding/Lime-market/client/src/pagination/Pagination.js":"25","/Users/eskimo/Coding/Lime-market/client/src/pagination/usePagination.js":"26","/Users/eskimo/Coding/Lime-market/client/src/components/EditMenuBackdrop.js":"27","/Users/eskimo/Coding/Lime-market/client/src/reducers/currentListing.js":"28","/Users/eskimo/Coding/Lime-market/client/src/components/ImageCarousel.js":"29","/Users/eskimo/Coding/Lime-market/client/src/components/ScrollToTop.js":"30"},{"size":304,"mtime":1632990424348,"results":"31","hashOfConfig":"32"},{"size":693,"mtime":1637557530343,"results":"33","hashOfConfig":"34"},{"size":1779,"mtime":1637558015580,"results":"35","hashOfConfig":"34"},{"size":3936,"mtime":1636614701674,"results":"36","hashOfConfig":"34"},{"size":396,"mtime":1636614778743,"results":"37","hashOfConfig":"34"},{"size":4119,"mtime":1637137067969,"results":"38","hashOfConfig":"34"},{"size":19937,"mtime":1637120048998,"results":"39","hashOfConfig":"34"},{"size":2403,"mtime":1636618985881,"results":"40","hashOfConfig":"34"},{"size":11985,"mtime":1637564984783,"results":"41","hashOfConfig":"34"},{"size":5709,"mtime":1636956539422,"results":"42","hashOfConfig":"34"},{"size":1526,"mtime":1636085335640,"results":"43","hashOfConfig":"34"},{"size":1712,"mtime":1636966614281,"results":"44","hashOfConfig":"34"},{"size":845,"mtime":1636959820822,"results":"45","hashOfConfig":"34"},{"size":651,"mtime":1633060219397,"results":"46","hashOfConfig":"34"},{"size":224,"mtime":1636614634183,"results":"47","hashOfConfig":"34"},{"size":224,"mtime":1635242102456,"results":"48","hashOfConfig":"34"},{"size":7202,"mtime":1636955135455,"results":"49","hashOfConfig":"34"},{"size":245,"mtime":1632990424348,"results":"50","hashOfConfig":"34"},{"size":254,"mtime":1637564946467,"results":"51","hashOfConfig":"34"},{"size":220,"mtime":1632990424348,"results":"52","hashOfConfig":"34"},{"size":1491,"mtime":1632990424349,"results":"53","hashOfConfig":"34"},{"size":13347,"mtime":1637032967416,"results":"54","hashOfConfig":"34"},{"size":7132,"mtime":1637564656044,"results":"55","hashOfConfig":"34"},{"size":1954,"mtime":1635899479175,"results":"56","hashOfConfig":"34"},{"size":1940,"mtime":1635917783478,"results":"57","hashOfConfig":"34"},{"size":2700,"mtime":1635913440876,"results":"58","hashOfConfig":"34"},{"size":884,"mtime":1636015451207,"results":"59","hashOfConfig":"34"},{"size":240,"mtime":1636614817451,"results":"60","hashOfConfig":"34"},{"size":4803,"mtime":1637125557878,"results":"61","hashOfConfig":"34"},{"size":252,"mtime":1637558023454,"results":"62","hashOfConfig":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ff4vti",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cd2gkb",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"71"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"71"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"71"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"71"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"71"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"71"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"71"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"71"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eskimo/Coding/Hoppang/client/src/components/LoginButton.js",[],"/Users/eskimo/Coding/Lime-market/client/src/index.js",[],"/Users/eskimo/Coding/Lime-market/client/src/App.js",[],"/Users/eskimo/Coding/Lime-market/client/src/actions/actions.js",[],["135","136"],"/Users/eskimo/Coding/Lime-market/client/src/reducers/index.js",[],"/Users/eskimo/Coding/Lime-market/client/src/routes/Home.js",["137"],"import {useEffect} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport herolisting from '../assets/herolisting.svg'\nimport herobg from '../assets/herobg.svg'\nimport { motion } from 'framer-motion'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getListings } from '../actions/actions'\nimport Listing from '../components/Listing'\n\nconst Home = () => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const listings = useSelector(state => state.listings)\n    \n    useEffect(() => {\n        dispatch(getListings())\n    }, [])\n\n    return (\n        <>\n        \n        <div className=\"hero\">\n            <motion.div \n                className=\"hero-mobile\"\n            >\n                <motion.img src={herolisting} className=\"hero-img\" \n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{ delay: 0.25, duration: 0.25 }}\n                />\n                <motion.img src={herobg} className=\"hero-bg\" \n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{ delay: 0.25, duration: 0.25 }}\n                />\n            </motion.div>\n            \n            <div className=\"hero-left\">\n                <motion.div\n                    initial={{ y: 20, opacity: 0 }}\n                    animate={{ y: 0, opacity: 1 }}\n                    transition={{ delay: 0.5, duration: 0.25 }}\n                >\n                    <h1>buy & sell</h1>\n                    <h1 className=\"highlight\">safely & affordably</h1>\n                    <p>Lime Market makes it easy to buy and sell items on a safe and secure platform.</p> <p>Powered by the Paypal payment system, users can buy and sell items with confidence.</p>\n                </motion.div>\n                <motion.button \n                    className=\"button-primary\" \n                    initial={{ y: 20, opacity: 0 }}\n                    animate={{ y: 0, opacity: 1 }}\n                    transition={{ delay: 0.5, duration: 0.25 }}\n                    onClick={() => {\n                        history.push('/listings')\n                    }}>\n                        Start Shopping!\n                </motion.button>\n            </div>\n\n            <motion.div \n                className=\"hero-right\"\n                initial={{ y: 20, opacity: 0 }}\n                animate={{ y: 0, opacity: 1 }}\n                transition={{ delay: 0.5, duration: 0.25 }}\n                >\n                <motion.img src={herolisting} className=\"hero-img\" \n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{ delay: 0.25, duration: 0.25 }}\n                />\n                <motion.img src={herobg} className=\"hero-bg\" \n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{ delay: 0.25, duration: 0.25 }}\n                />\n            </motion.div>\n        </div>\n\n        <motion.div className=\"hero-bottom\"\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n        >\n            {/* Popular Listings */}\n            <motion.div className=\"hero-bottom-h\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 0.35, duration: 0.25 }}\n            >\n                <h3>Recent Listings</h3>\n            </motion.div>\n            <div className=\"listings-grid\">\n                {listings.slice(-3).map(listing => \n                    <Listing listing={listing} />\n                )}\n            </div>\n            <motion.button \n                className=\"button-primary\" \n                initial={{ y: 20, opacity: 0 }}\n                animate={{ y: 0, opacity: 1 }}\n                transition={{ delay: 0.5, duration: 0.25 }}\n                onClick={() => {\n                    history.push('/listings')\n                }}>\n                    See More\n            </motion.button>\n        </motion.div>\n        </>\n    )\n}\n\nexport default Home","/Users/eskimo/Coding/Lime-market/client/src/routes/ListingInfoPage.js",["138","139","140","141","142","143","144","145","146","147","148","149","150"],"import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { Link, Redirect, useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentListing, addComment, getListing } from '../actions/actions';\nimport moment from 'moment';\nimport Lottie from 'react-lottie-segments'\nimport Tooltip from '../components/Tooltip.js';\nimport menu from '../assets/menu-v.svg';\nimport deleteSvg from '../assets/delete.svg'\nimport like from '../assets/like.json'\nimport { motion, AnimateSharedLayout } from 'framer-motion'\nimport { UserContext } from '../App';\nimport axios from 'axios'\nimport LoginButton from '../components/LoginButton';\nimport EditMenuBackdrop from '../components/EditMenuBackdrop';\nimport ImageCarousel from '../components/ImageCarousel';\n\nconst ListingInfoPage = () => {\n    const user = JSON.parse(sessionStorage.getItem('user'))\n    const {currentUser, setCurrentUser} = useContext(UserContext)\n    console.log(currentUser)\n    const token = sessionStorage.getItem('token')\n    const dispatch = useDispatch()\n    const { listingId } = useParams()\n    const listing = useSelector((state) => state.listing)\n    console.log(listing)\n    const [currentImage, setCurrentImage] = useState(null)\n    const [likes, setLikes] = useState()\n    \n    const [toggleCarousel, setToggleCarousel] = useState(false)\n    const [toggleMenu, setToggleMenu] = useState(false)\n    const [toggleTooltip, setToggleTooltip] = useState(false)\n    const [edit, setEdit] = useState(false)\n    const [deleted, setDeleted] = useState(false)\n\n    const [liked, setLiked] = useState()\n    const [isStopped, setIsStopped] = useState(true)\n    const [listingComments, setComments] = useState()\n    \n    const [newComment, setNewComment] = useState(\"\")\n    const [deleteModalOn, setDeleteModal] = useState(false)\n\n    const getComments = async(listingId) => {\n        await axios\n            .get(`http://localhost:8000/comments?listing_id=${listingId}`)\n            .then(response => {\n                setComments(response.data)\n            })\n    }\n\n    const toggleLike = () => {\n        if (!liked) {\n            axios.patch(`http://localhost:8000/listings/${listingId}/like`, \n                {\n                    like_count: likes + 1\n                },\n                {\n                    headers: {\n                        'Authorization': `Token ${token}`\n                    }\n                }\n            )\n            .then(() => {\n                console.log(user?.watchlist)\n                let newWatchlist = Object.values(user?.watchlist)\n                const index = newWatchlist.length\n                newWatchlist[index] = {\n                    id: listingId\n                }\n                return axios.patch(`http://localhost:8000/users/update/${user.username}`, \n                    {\n                        watchlist: newWatchlist\n                    },\n                    {\n                        headers: {\n                            'Authorization': `Token ${token}`\n                        }\n                    }    \n                )\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/users/view/${user.username}`)\n                    .then((response) => {\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                        setCurrentUser(response.data)\n                        getLikes(listingId)\n                    })\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n                    .then(response => {\n                        setLikes(response.data.like_count)\n                        setIsStopped(!isStopped)\n                        setLiked(!liked)\n                    })\n            })\n        } else if (liked) {\n            axios.patch(`http://localhost:8000/listings/${listingId}/like`, \n                {\n                    like_count: likes - 1\n                },\n                {\n                    headers: {\n                        'Authorization': `Token ${token}`\n                    }\n                }\n            )\n            .then(() => {\n                const newWatchlist = user?.watchlist\n                const index = newWatchlist.findIndex(l => l.id == listingId.toString())\n                if (index > -1) {\n                    newWatchlist.splice(index, 1)\n                }\n                console.log(newWatchlist)\n\n                return axios.patch(`http://localhost:8000/users/update/${user.username}`, \n                    {\n                        watchlist: newWatchlist\n                    },\n                    {\n                        headers: {\n                            'Authorization': `Token ${token}`\n                        }\n                    }    \n                )\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/users/view/${user.username}`)\n                    .then((response) => {\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                        setCurrentUser(response.data)\n                    })\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n                    .then(response => {\n                        setLikes(response.data.like_count)\n                        setIsStopped(!isStopped)\n                        setLiked(!liked)\n                    })\n            })\n        }\n    }\n\n    const getLikes = (listingId) => {\n        axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n        .then(response => {\n            setLikes(response.data.like_count)\n        })\n        .catch((error) => {\n            console.log(error)\n            setLikes(0)\n        })\n    }\n\n    const handleEdit = () => {\n        dispatch(setCurrentListing(listing))\n        setEdit(true)\n    }\n\n    const handleDelete = async() => {\n        await axios.delete(`http://localhost:8000/listings/delete/${listingId}`,\n            {\n                headers: {\n                    'Authorization': `Token ${token}`\n                }\n            }\n        ).then(async() => {\n            const newList = user?.listings_created.filter(l => l.id !== parseInt(listingId))\n\n            await axios.patch(`http://localhost:8000/users/update/${user.username}`,\n                {\n                    listings_created: newList\n                },\n                {\n                    headers: {\n                        'Authorization': `Token ${token}`\n                    }\n                }\n            ).then(() => {\n                setDeleted(true)\n            })\n        })\n        \n    }\n\n    const handleImage = (index) => {\n        setCurrentImage(index)\n        setToggleCarousel(true)\n    }\n\n    const handleComment = (e) => {\n        e.preventDefault()\n        dispatch(addComment(\n            // comment\n            {   \n                creator: user.username,\n                creator_img: user.profile_img,\n                listing: listingId,\n                content: newComment,\n            },\n            {\n                headers: {\n                    'Authorization': `Token ${token}`\n                }\n            } \n        ))\n        setNewComment(\"\")\n        getComments(listingId)\n    }\n\n    const handleCommentDelete = async(commentId) => {\n        await axios.delete(`http://localhost:8000/comments/delete/${commentId}`,\n            {\n                headers: {\n                    'Authorization': `Token ${token}`\n                }\n            }\n        )\n        .then(() => {\n            getComments(listingId)\n            setDeleteModal(!deleteModalOn)\n        })\n    }\n\n    const paypal = useRef();\n\n    useEffect(() => {\n        dispatch(getListing(listingId))\n        if (user) {\n            const likedBool = user?.watchlist.some(listing => listing.id === listingId.toString())\n            setIsStopped(!likedBool)\n            setLiked(likedBool)\n        }\n        getLikes(listingId)\n        getComments(listingId)\n    }, [currentUser])\n\n    useEffect(() => {\n        const product = {\n            price: listing?.price,\n            description: listing?.description,\n        };\n\n        window.paypal\n            .Buttons({\n            style: {\n                color: 'silver',\n                size: 'medium',\n                layout: 'vertical',\n                label: 'checkout',\n            },\n            createOrder: (data, actions) => {\n                return actions.order.create({\n                purchase_units: [\n                    {\n                    description: product.description,\n                    amount: {\n                        currency_code: \"USD\",\n                        value: product.price\n                    }\n                    }\n                ]\n                });\n            },\n            onApprove: async (data, actions) => {\n                const order = await actions.order.capture();\n\n                console.log(order);\n            },\n            onError: err => {\n                console.log(err);\n            }\n            })\n            .render(paypal.current);\n    }, []);\n    \n    return (\n        <>\n        { listing &&\n        <motion.div className=\"page-wrapper\"\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ delay: 0.5, duration: 0.25 }}\n        >\n        \n            { deleted && <Redirect to=\"/listings\" /> }\n\n            {/* Toggles */}\n            <Tooltip content=\"Please log-in to like and save listings\" toggleTooltip={toggleTooltip} setToggleTooltip={setToggleTooltip} />\n            <EditMenuBackdrop toggleMenu={toggleMenu} setToggleMenu={setToggleMenu} handleEdit={handleEdit} handleDelete={handleDelete}/>\n            {toggleCarousel \n                ?\n                <ImageCarousel \n                    toggleCarousel={toggleCarousel} \n                    setToggleCarousel={setToggleCarousel}\n                    currentImage={currentImage} \n                    listing={listing}\n                />\n                : \n                null\n            }\n                {/*  */}\n\n            {/* Listing Info */}\n            <div className=\"listing-info\">\n                { (listing?.creator === user?.username) &&\n                <div className=\"listing-info-edit-menu\">\n                    {/* Toggle EditMenu */}\n                    <button className={`button-menu ${toggleMenu && \"button-menu-active\"}`} onClick={() => setToggleMenu(!toggleMenu)} >\n                        <img src={menu} />\n                    </button>\n                    \n                    <div className={`edit-menu ${toggleMenu && \"edit-menu-open\"}`}>\n                        <button className=\"button-menu-edit\" onClick={handleEdit}><h5 >Edit</h5></button>\n                        <button className=\"button-menu-delete\" onClick={handleDelete}><h5>Delete</h5></button>\n                    </div>\n                    \n                </div>\n                }\n                \n                { edit && <Redirect to=\"/form\" /> }\n                <div className=\"listing-info-img\">\n                    <img src={listing?.image1} onClick={() => handleImage(0)}/>\n                    <div className=\"listing-info-img-small\">\n                        <div className={`${listing?.image2 ? \"listing-info-img-small-col-1\" : \"display-none\"}`}>\n                            {listing?.image2 && <img src={listing?.image2} onClick={() => handleImage(1)}/>}\n                            {listing?.image3 && <img src={listing?.image3} onClick={() => handleImage(2)}/>}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"listing-info-title\">\n                    <h1>{listing?.title}</h1>\n                </div>\n                <div className=\"listing-info-desc\">\n                    <p>{listing?.description}</p>\n                </div>\n                <div className=\"listing-info-bottom\">\n                    <div className=\"listing-info-price\">\n                        <h1>${listing?.price}</h1>\n                    </div>\n                    <div className=\"listing-info-creator\">\n                        <div className=\"listing-info-creator-img\">\n                            \n                            <img src={listing?.creator_img} />\n                            \n                        </div>\n                        <div className=\"listing-info-creator-name\">\n                            \n                            <h5>{listing?.creator}</h5>\n                            <h4>Seller  ✓</h4>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"listing-info-paypal\" ref={paypal}>\n                   {/* Paypal */}\n                </div>\n\n                <div className=\"listing-info-like\">\n                    <button \n                        className={`listing-info-like-button ${liked && \"liked\"}`} \n                        onClick={user ? toggleLike : setToggleTooltip}\n                    >\n                    \n                        <Lottie\n                            options={{\n                                loop: false,\n                                autoplay: false,\n                                animationData: like,\n                                rendererSettings: {\n                                    preserveAspectRatio: 'xMidYMid slice'\n                                }\n                            }}\n                            height=\"35px\"\n                            width=\"35px\"\n                            isStopped={isStopped}\n                        />\n                        <span className=\"listing-info-like-text\"><h5>{likes} Likes</h5></span>\n                    </button>\n                </div>\n\n                {/* Comments */}\n                <div className=\"comments-section\">\n                    <div className=\"comments-show\">\n                        {listingComments?.map((comment, key) => {\n                            const commentId = comment?.id\n                            return (\n                                <div key={key} className=\"comment-comment\">\n                                    {/* Delete Modal */}\n                                    {deleteModalOn &&\n                                    <motion.div className=\"delete-modal-backdrop\" onClick={() => setDeleteModal(!deleteModalOn)}>\n                                        <motion.div className=\"delete-modal-overlay\"\n                                            initial={{opacity: 0, scale: 0}}\n                                            animate={{opacity: 1, scale: 1}}\n                                            transition={{type: 'spring', bounce: 1, duration: 0.2}}\n                                            exit={{opacity: 0, scale: 0}}\n                                        >\n                                            <motion.div>\n                                                <h3>Are you sure you want to delete this comment?</h3>\n                                            </motion.div>\n                                            <motion.div className=\"delete-modal-overlay-bottom\">\n                                                <button className=\"delete-modal-yes\" onClick={() => handleCommentDelete(commentId)} >Yes</button>\n                                                <button className=\"button-secondary\" onClick={() => setDeleteModal(false)}>No</button>\n                                            </motion.div>\n                                        </motion.div>\n                                    </motion.div>\n                                    }\n                                    {/* ------------ */}\n\n                                    {/* Comment delete */}\n                                    {(comment?.creator === user?.username) &&\n                                    <div className=\"comment-top-delete\">\n                                        <img \n                                            className=\"comment-delete-button\"\n                                            onClick={ () =>\n                                                setDeleteModal(true)\n                                            }\n                                            src={deleteSvg}\n                                        />\n                                    </div>\n                                    }\n\n                                    <div className=\"comment-body\">\n                                        <p>{comment?.content}</p>\n                                    </div>\n\n                                    <div className=\"comment-bottom\">\n                                        <div className=\"comment-user\">\n                                            <div className=\"comment-pic\">\n                                                <Link to={`/profile/${comment?.creator}`}>\n                                                    <img \n                                                        className=\"comment-comment-img\"\n                                                        src={comment?.creator_img}\n                                                    />\n                                                </Link>\n                                            </div>\n                                            <div className=\"comment-name\">\n                                                <h6>{comment?.creator}</h6>\n                                                {(comment?.creator === listing?.creator) && \n                                                    <h4>Seller  ✓</h4>\n                                                }\n                                            </div>\n                                        </div>\n                                        <div className=\"comment-date\"><h6>{moment(`${comment?.date_created}`).format('lll')}</h6></div>\n                                    </div>\n                                </div>\n                            );\n                            })}\n                    </div>\n                    <div className=\"comments-input\">\n                        <form onSubmit={handleComment}>\n                            <textarea \n                                className=\"input-box\" \n                                placeholder={ user ? \"Comments must be at least 10 characters long.\" : \"Please sign in to comment\" } \n                                value={newComment} \n                                onChange={(event) => {\n                                    setNewComment(event.target.value)\n                                }} \n                            />\n                            { user \n                            ? \n                            ( newComment.length > 9\n                                ?\n                                <button \n                                    className=\"button-primary\"\n                                    type=\"submit\"\n                                >\n                                    Submit\n                                </button>\n                                :\n                                <div className=\"button-primary-null\">\n                                    Submit\n                                </div>\n                            )\n                            : \n                            <Link to='/login'>\n                                <button \n                                    className=\"button-secondary\"\n                                >\n                                    Sign-in\n                                </button>\n                            </Link>\n                            }\n                        </form>\n                    </div>\n                </div>\n            </div>    \n        </motion.div>\n        }\n       </>\n    )\n}\n\nexport default ListingInfoPage","/Users/eskimo/Coding/Lime-market/client/src/routes/ListingsPage.js",["151","152","153","154","155","156","157"],"import { useState, useEffect, useMemo, useContext } from 'react'\nimport Pagination from '../pagination/Pagination'\nimport Listing from '../components/Listing'\nimport Loading from '../components/Loading'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { motion} from 'framer-motion'\nimport { getListings } from '../actions/actions'\nimport { fetchListings } from '../api/api'\n\nconst ListingsPage = () => {\n  const dispatch = useDispatch()\n  const [loading, setLoading] = useState(true)\n  const listings = useSelector(state => state.listings)\n  const [currentPage, setCurrentPage] = useState(1)\n  const PageSize = 6\n\n  useEffect(() => {\n    dispatch(getListings())\n  }, [])\n\n  const currentData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return listings?.slice(firstPageIndex, lastPageIndex);\n  }, [listings, currentPage]);\n\n  console.log(listings)\n  console.log(currentData)\n\n  \n\n  return (\n      currentData?.length > 0\n        ? (\n        <>\n        <div className=\"listings-grid\">\n          {currentData.map(listing => \n            <Listing listing={listing} currentPage={currentPage} />\n          )}\n        </div>\n\n        <Pagination\n          className=\"pagination-bar\"\n          currentPage={currentPage}\n          totalCount={listings?.length}\n          pageSize={PageSize}\n          onPageChange={page => setCurrentPage(page)}\n        />\n        </>\n        )\n        : (\n        <>\n        {/* skeleton loading */}\n        <div className=\"listings-grid\">\n          {/* create array from length of PageSize and map to div element */}\n          {Array.from({length: PageSize}, (item, index) =>\n            <div className=\"listing-skeleton\">\n              <div className=\"listing-img-div skeleton skeleton-img\">\n              </div>\n              <div className=\"listing-skeleton-text\">\n                <div className=\"skeleton skeleton-text\"></div>\n                <div className=\"skeleton skeleton-text\"></div>\n                <div className=\"skeleton skeleton-text\"></div>\n                <div className=\"skeleton skeleton-text\"></div>\n                <div className=\"skeleton skeleton-text\"></div>\n                <div className=\"skeleton skeleton-text\"></div>\n              </div>\n            </div>\n          )}\n        </div>\n        </>\n        )  \n  )\n}\n\nexport default ListingsPage\n","/Users/eskimo/Coding/Lime-market/client/src/components/Navbar.js",["158","159","160","161","162"],"/Users/eskimo/Coding/Lime-market/client/src/routes/LoginPage.js",["163","164","165"],"import React, { useState, useContext } from 'react'\nimport { motion } from 'framer-motion'\nimport axios from 'axios'\nimport { Link, useHistory } from 'react-router-dom' \nimport loginSvg from '../assets/login.svg'\nimport ClipLoader from 'react-spinners/ClipLoader'\nimport { UserContext } from '../App'\n\nfunction LoginPage() {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    // const [fixPassword, setFixPassword] = useState(false)\n    const [invalidLogin, setInvalidLogin] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n    const {currentUser, setCurrentUser} = useContext(UserContext)\n    const user = sessionStorage.getItem('user')\n\n    const loginCredentials = {\n        username: username,\n        password: password,\n    }\n\n    // const fetchWatchlist = () => {\n    //     // Object.keys(user.watchlist).map(key => {\n    //     //     axios.get('http://localhost:8000/listings/')\n    //     // })\n    //     let newWatchlist = [] \n    //     for (let listing in user?.watchlist) {\n    //         axios.get(`http://localhost:8000/listings/${user?.watchlist[listing]}`)\n    //         .then(response => {\n    //             newWatchlist.push({\n    //                 id: response.data.id,\n    //                 img: response.data.image1,\n    //                 title: response.data.title,\n    //                 price: response.data.price\n    //             })\n    //         })\n    //     }\n    //     localStorage.setItem('watchlist', newWatchlist)\n    // }\n\n    const handleSubmit = async(e) => {\n        e.preventDefault()\n        setLoading(true)\n        \n        await axios\n            .post('http://localhost:8000/auth/', {\n                username: `${loginCredentials.username}`,\n                password: `${loginCredentials.password}`\n            })\n            .then(async(response) => {\n                console.log(response.data.token)\n                sessionStorage.setItem('token', response.data.token)\n\n                await axios\n                    .get(`http://localhost:8000/users/view/${username}`)\n                    .then((response) => {\n                        console.log(response)\n                        setCurrentUser(response.data)\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                        console.log(currentUser)\n                    })\n                \n                setLoading(false)\n                history.goBack()\n            })\n            .catch((error) => {\n                console.log(error)\n                setInvalidLogin(true)\n                // console.log(invalidLogin)\n                setLoading(false)\n                return\n            })\n    }\n\n    return(\n        <>\n        <motion.div className=\"page-wrapper\"\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ delay: 0.5, duration: 0.25 }}\n        >\n            <div className=\"login-div\">\n                <div className=\"login-bg\">\n                    <img src={loginSvg} className=\"login-svg\" />\n                </div>\n                <div className=\"login-form-div\">\n                    <div className=\"login-form-title\">\n                        <h1>Welcome Back!</h1>\n                    </div>\n                    <div>\n                        <form className=\"login-form\" onSubmit={handleSubmit}>\n                            <label>\n                                <h5>Username:</h5>\n                                <input \n                                    type=\"text\" \n                                    value={username} \n                                    onChange={e => \n                                        setUsername(e.target.value)\n                                    } \n                                />\n                            </label>\n                            <label>\n                                <h5>Password:</h5>\n                                <input \n                                    type=\"password\" \n                                    value={password} \n                                    onChange={e =>\n                                        setPassword(e.target.value)\n                                    } \n                                />\n                            </label>\n                            <div className='errors-bottom'>\n                                {invalidLogin \n                                    ? (<p className=\"invalid\">There is no account with those credentials. Try again.</p>)\n                                    : null\n                                }\n                            </div>\n                                {loading\n                                ?  \n                                <div className=\"button-secondary center-button\">\n                                    Log-in \n                                    <ClipLoader color='grey' loading={loading} size={15} />\n                                </div>\n                                :  \n                                <button className=\"button-primary\" type=\"submit\" value=\"Submit\">\n                                    Log-in\n                                </button>\n                                }   \n                        </form>\n                    </div>\n                    <div className=\"login-bottom\">\n                        <h5>New Here?</h5>\n                        <Link to='/register'>\n                            <a>Create an account</a>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </motion.div>\n        </>\n    )\n}\n\nexport default LoginPage\n","/Users/eskimo/Coding/Lime-market/client/src/routes/ProfilePage.js",["166","167"],"import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport Listing from '../components/Listing'\n\nimport { motion, AnimateSharedLayout} from 'framer-motion'\nimport axios from 'axios';\n\nconst Profile = () => {\n  const { userId } = useParams()\n  const [userImg, setUserImg] = useState('')\n  const [userListings, setUserListings] = useState([])\n\n  useEffect(() => {\n    axios.get(`http://localhost:8000/users/view/${userId}`)\n      .then(response => {\n        console.log(response)\n        setUserImg(response.data.profile_img)\n        setUserListings(response.data.listings_created)\n      })\n  }, [])\n\n  return (\n    <div className=\"profile-info-container\">\n      <motion.div className=\"profile-info\"\n        initial={{ y: 20, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        exit={{ y: -20, opacity: 0 }}\n        transition={{ delay: 0.5, duration: 0.25 }}\n      >\n        <div className=\"profile-info-img\">\n          <img src={userImg} alt={userId} />\n        </div>\n        <div className=\"profile-info-name\">\n          <h2>{userId}</h2>\n        </div>\n        <div className=\"profile-info-listings-label\">\n          <h1>User Listings</h1>\n        </div>\n        <div className=\"profile-info-listings-cards\">\n          {userListings.map(userListing => \n            <Listing listing={userListing} />\n          )}\n          { (userListings.length === 0) && \n            <p>No listings yet!</p>\n          }\n        </div>\n      </motion.div>\n    </div>\n  )\n}\n\nexport default Profile","/Users/eskimo/Coding/Lime-market/client/src/routes/FormPage.js",["168"],"import {useState, useEffect} from 'react'\nimport ListingForm from '../components/ListingForm'\n\nimport { motion } from 'framer-motion'\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\nimport { useHistory } from 'react-router';\n\nconst FormPage = () => {\n    const user = JSON.parse(sessionStorage.getItem('user'))\n    const history = useHistory()\n    const [redirectOn, toggleRedirect] = useState(false)\n    const redirectToLogin = () => {\n        setTimeout(() => {\n            history.push('/login')\n        }, 2500)\n    }\n\n    useEffect(() => {\n        !user &&\n        setTimeout(() => {\n            toggleRedirect(true)\n        }, 2500)\n    }, [])\n\n    return (\n        <>\n        {\n            redirectOn && \n            (\n            <>\n            <div className=\"login-modal-listingform-backdrop\">\n                <div className=\"login-modal-listingform\">\n                    <h6>\n                        You need to be logged in to create a listing!\n                    <br />\n                    <br />\n                        Redirecting to login page...\n                    </h6>\n                    <br />\n                    \n                        <PropagateLoader color='#A5E9C0' loading={true} size={15} />\n                    <br />\n                    \n\n\n                    {redirectToLogin()}\n                </div>\n            </div>\n            </>\n            )\n        }\n        <motion.div className=\"form-grid\"\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ delay: 0.5, duration: 0.25 }}\n        >\n            <ListingForm ></ListingForm>\n        </motion.div>\n        </>\n    )\n}\n\nexport default FormPage\n","/Users/eskimo/Coding/Lime-market/client/src/components/Tooltip.js",["169"],"import \"../css/Tooltip.css\";\nimport loginPlease from '../assets/loginplease.svg'\nimport {Link} from 'react-router-dom'\n\nexport default function Tooltip({ content, toggleTooltip, setToggleTooltip }) {\n    const toggle = () => {\n        setToggleTooltip(!toggleTooltip);\n    };\n    \n    return (\n        <>\n            <div className={`modal-backdrop ${toggleTooltip && \"modal-backdrop-show\"}`} onClick={toggle}>\n                <div className={`tooltip-content ${toggleTooltip && \"tooltip-content-open\"}`}>\n                    <p>{content}</p>\n                    <img src={loginPlease} />\n                    <Link to=\"/login\">\n                        <button className=\"button-primary\">\n                            Log-in\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </>\n  );\n}","/Users/eskimo/Coding/Lime-market/client/src/reducers/listings.js",[],"/Users/eskimo/Coding/Lime-market/client/src/reducers/listing.js",[],"/Users/eskimo/Coding/Lime-market/client/src/reducers/comments.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/Listing.js",["170","171","172","173","174","175"],"import {useEffect, useState, useContext} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { motion } from 'framer-motion'\nimport Lottie from 'react-lottie-segments'\nimport like from '../assets/like.json'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Tooltip from '../components/Tooltip.js';\nimport { UserContext } from '../App'\n\nconst Listing = ({listing, currentPage}) => {\n    const listingId = listing.id.toString()\n    const user = JSON.parse(sessionStorage.getItem('user'))\n    console.log(user)\n    const {currentUser, setCurrentUser} = useContext(UserContext)\n    console.log(currentUser)\n    const token = sessionStorage.getItem('token')\n    const history = useHistory()\n    // const likedBool = currentUser?.watchlist.some(listing => listing.id === listingId.toString())\n    // console.log(likedBool)\n    const [toggle, setToggle] = useState(false)\n    const [likes, setLikes] = useState()\n    const [liked, setLiked] = useState()\n    const [isStopped, setIsStopped] = useState(true)\n    console.log(listing)\n    const toggleLike = () => {\n        if (!liked) {\n            axios.patch(`http://localhost:8000/listings/${listingId}/like`, \n                {\n                    like_count: likes + 1\n                },\n                {\n                    headers: {\n                        'Authorization': `Token ${token}`\n                    }\n                }\n            )\n            .then(() => {\n                console.log(user?.watchlist)\n                let newWatchlist = Object.values(user?.watchlist)\n                const index = newWatchlist.length\n                newWatchlist[index] = {\n                    id: listingId,\n                    img: listing.image1,\n                    title: listing.title,\n                    price: listing.price\n                }\n                return axios.patch(`http://localhost:8000/users/update/${user.username}`, \n                    {\n                        watchlist: newWatchlist\n                    },\n                    {\n                        headers: {\n                            'Authorization': `Token ${token}`\n                        }\n                    }    \n                )\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/users/view/${user.username}`)\n                    .then((response) => {\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                        setCurrentUser(response.data)\n                        getLikes(listingId)\n                    })\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n                    .then(response => {\n                        setLikes(response.data.like_count)\n                        setIsStopped(!isStopped)\n                        setLiked(!liked)\n                    })\n            })\n        } else if (liked) {\n            axios.patch(`http://localhost:8000/listings/${listingId}/like`, \n                {\n                    like_count: likes - 1\n                },\n                {\n                    headers: {\n                        'Authorization': `Token ${token}`\n                    }\n                }\n            )\n            .then(() => {\n                const newWatchlist = user?.watchlist\n                const index = newWatchlist.findIndex(l => l.id == listingId.toString())\n                if (index > -1) {\n                    newWatchlist.splice(index, 1)\n                }\n                return axios.patch(`http://localhost:8000/users/update/${user.username}`, \n                    {\n                        watchlist: newWatchlist\n                    },\n                    {\n                        headers: {\n                            'Authorization': `Token ${token}`\n                        }\n                    }    \n                )\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/users/view/${user.username}`)\n                    .then((response) => {\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                        setCurrentUser(response.data)\n                    })\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n                    .then(response => {\n                        setLikes(response.data.like_count)\n                        setIsStopped(!isStopped)\n                        setLiked(!liked)\n                    })\n            })\n        }\n    }\n\n    const getLikes = (listing_id) => {\n        axios.get(`http://localhost:8000/listings/${listing_id}/likeCount`)\n        .then(response => {\n            setLikes(response.data.like_count)\n        })\n    }\n\n    useEffect(() => {\n        getLikes(listingId)\n        if (user) {\n            const likedBool = user?.watchlist.some(listing => listing.id === listingId.toString())\n            setIsStopped(!likedBool)\n            setLiked(likedBool)\n        }\n    }, [currentUser, currentPage])\n    \n    \n    return (\n        <>\n        \n        <motion.div \n            className=\"listing\"\n            initial={{ y: 0, opacity: 0 }}\n            animate={{ y: -10, opacity: 1 }}\n            transition={{ delay: 0.5, duration: 0.25 }}\n        >\n            {/* listing image */}\n            <div className=\"listing-img-div\">\n                <img src={listing.image1} />\n            </div>\n\n            {/* title, price, details btn */}\n            <div className=\"listing-title\">\n                <h3>{listing.title}</h3>\n            </div>\n            <div className=\"listing-price\">\n                <h3>${listing.price}</h3>\n            </div>\n            <div className=\"listing-like\">\n                \n                    <button \n                        className={`listing-info-like-button ${liked && \"liked\"}`}\n                        onClick={user ? toggleLike : setToggle}\n                    >\n                        <Lottie\n                            options={{\n                                loop: false,\n                                autoplay: false,\n                                animationData: like,\n                                rendererSettings: {\n                                    preserveAspectRatio: 'xMidYMid slice'\n                                }\n                            }}\n                            height=\"35px\"\n                            width=\"35px\"\n                            isStopped={isStopped}\n                        />\n                        <span className=\"listing-info-like-text\"><h5>{likes} Likes</h5></span>\n                    </button>\n            </div>\n            <div className=\"listing-btn\">\n                {/* <Link to={`listings/${listingId}`}> */}\n                    <button className=\"button-primary\" \n                        onClick={() => {\n                        history.push(`/listings/${listingId}`)\n                        }}\n                    >Details</button>\n                {/* </Link> */}\n            </div>\n        </motion.div>\n        \n        </>\n    )\n}\n\nexport default Listing\n","/Users/eskimo/Coding/Lime-market/client/src/components/Loading.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/LoginButton.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/LogoutButton.js",["176"],"import { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = (props) => {\n  return (\n    <button className=\"logout-btn\" onClick={props.logoutAll}>\n      Log Out\n    </button>\n  );\n};\n\nexport default LogoutButton;","/Users/eskimo/Coding/Lime-market/client/src/components/MenuButton.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/ListingForm.js",["177","178","179","180","181","182","183","184","185","186"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport priceTagSvg from \"../assets/pricetag.svg\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nimport { setCurrentListing } from \"../actions/actions\";\nimport axios from \"axios\";\nimport { UserContext } from \"../App\";\n\nconst ListingForm = () => {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\n  const token = sessionStorage.getItem(\"token\");\n  const [listingData, setListingData] = useState({\n    title: \"\",\n    price: 0,\n    description: \"\",\n  });\n  const [listingImages, setListingImages] = useState({});\n  console.log(listingData);\n  console.log(listingImages);\n  const [loading, setLoading] = useState(false);\n\n  // const [files, setFiles] = useState({})\n  // console.log(files)\n  const currentListing = useSelector((state) => state.currentListing);\n  console.log(currentListing);\n  const [currentListingImages, setCurrentListingImages] = useState();\n  const listingId = currentListing?.id;\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(false);\n  const [redirectId, setRedirectId] = useState(\"\");\n\n  const [errors, setErrors] = useState({\n    title: \"\",\n    price: \"\",\n    description: \"\",\n    image: \"\",\n  });\n  console.log(errors);\n  // useEffect(() => {\n  //     currentListing &&\n  //     setRedirectId(currentListing)\n  //     setListingData({ ...listingData, title: listing?.title, description: listing?.description, price: listing?.price, selectedFile: listing?.selectedFile })\n  // }, [currentListing])\n\n  const clear = () => {\n    dispatch(setCurrentListing([]));\n    setListingData({ title: \"\", description: \"\", price: \"\", selectedFile: \"\" });\n  };\n\n  const validate = () => {\n    // Error checks\n    let titleError = null;\n    let priceError = null;\n    let descriptionError = null;\n    let imageError = null;\n\n    if (listingData.title.length < 5) {\n      titleError = \"Title must be at least 5 characters long\";\n    }\n    if (parseInt(listingData.price) < 1 || listingData.price.length === 0) {\n      priceError = \"Price must be at least $1 (dollar)\";\n    }\n    if (\n      (listingData.description.length < 10) |\n      (listingData.description.length > 250)\n    ) {\n      descriptionError =\n        \"Description must be between 10 and 250 characters long\";\n    }\n    if (listingImages.length < 1) {\n      imageError = \"At least one image must be uploaded\";\n    }\n    if (titleError || priceError || descriptionError || imageError) {\n      setErrors({\n        title: titleError,\n        price: priceError,\n        description: descriptionError,\n        image: imageError,\n      });\n      return false;\n    }\n\n    return true;\n  };\n  // const axiosInstance = axios.create({\n  //     timeout: 5000,\n  //     headers: {\n  //         ,\n  //         Accept: '*/*',\n  //     },\n  // })\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    validate()\n    let formData = new FormData();\n    formData.append(\"title\", listingData.title);\n    formData.append(\"description\", listingData.description);\n    formData.append(\"price\", parseInt(listingData.price));\n    for (let image in listingImages) {\n      formData.append(`image${parseInt(image) + 1}`, listingImages[image]);\n    }\n\n    // formData.append('image1', listingImages.image1)\n    // formData.append('image2', listingImages.image2)\n    // formData.append('image3', listingImages.image3)\n    // formData.append('image4', listingImages.image4)\n    formData.append(\"creator\", user?.username);\n    formData.append(\"creator_img\", user?.profile_img);\n\n    const updatedListings = currentUser?.listings_created.filter(\n      (listing) => listing.id !== listingId\n    );\n\n    if (currentListing.length === 0) {\n      axios\n        .post(\"http://localhost:8000/listings/create\", formData, {\n          headers: {\n            Authorization: `Token ${token}`,\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        })\n        .then(async (response) => {\n          console.log(response);\n          setRedirectId(response.data.id);\n          const userListings = [...user?.listings_created, response.data];\n          await axios.patch(\n            `http://localhost:8000/users/update/${user?.username}`,\n            {\n              listings_created: userListings,\n            },\n            {\n              headers: {\n                Authorization: `Token ${token}`,\n              },\n            }\n          );\n        })\n        .then(() => {\n          clear();\n          setLoading(false);\n          setRedirect(true);\n        })\n        .catch((error) => {\n          setLoading(false);\n        });\n    } else {\n      // Remove listing to edit from user data listings_created\n      axios\n        .patch(\n          `http://localhost:8000/users/update/${user?.username}`,\n          {\n            listings_created: updatedListings,\n          },\n          {\n            headers: {\n              Authorization: `Token ${token}`,\n            },\n          }\n        )\n        // .then(async() => {\n        //     await axios.get(`http://localhost:8000/users/view/${user?.username}`)\n        // })\n        .then(async (response) => {\n          console.log(response);\n          console.log(user);\n          await axios\n            .patch(\n              `http://localhost:8000/listings/update/${listingId}`,\n              formData,\n              {\n                headers: {\n                  Authorization: `Token ${token}`,\n                  \"Content-Type\": \"multipart/form-data\",\n                },\n              }\n            )\n            .then(async (response) => {\n              console.log(response);\n              // setRedirectId(response.data.id.toString())\n              const userListings = [...updatedListings, response.data];\n              await axios\n                .patch(\n                  `http://localhost:8000/users/update/${user?.username}`,\n                  {\n                    listings_created: userListings,\n                  },\n                  {\n                    headers: {\n                      Authorization: `Token ${token}`,\n                    },\n                  }\n                )\n                .then((response) => {\n                  sessionStorage.setItem(\"user\", JSON.stringify(response.data));\n                  setRedirectId(listingId);\n                })\n                .then(() => {\n                  clear();\n                  setCurrentUser(JSON.parse(sessionStorage.getItem(\"user\")));\n                  setLoading(false);\n                  setRedirect(true);\n                  // window.location.reload()\n                });\n            });\n        })\n        .catch((error) => {\n          setLoading(false);\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (currentListing.length !== 0) {\n      let imageURLs = [\n        currentListing?.image1,\n        currentListing?.image2,\n        currentListing?.image3,\n      ];\n      imageURLs = imageURLs.filter((el) => el !== null);\n      console.log(imageURLs);\n      let images = {};\n      imageURLs?.forEach(async (el, i) => {\n        const imgURL = await fetch(el);\n        console.log(imgURL);\n        const blob = await imgURL.blob();\n        console.log(blob);\n        const fileName = el?.slice(el.lastIndexOf(\"/\") + 1);\n        console.log(fileName);\n        const file = new File([blob], fileName, { type: blob.type });\n        images[i] = file;\n        console.log(images);\n      });\n      // set listingImages state to images object from above\n      setListingImages(images);\n      console.log(listingImages);\n      setListingData({\n        title: currentListing?.title,\n        price: currentListing?.price,\n        description: currentListing?.description,\n      });\n      setCurrentListingImages({\n        image1: currentListing?.image1,\n        image2: currentListing?.image2,\n        image3: currentListing?.image3,\n      });\n    }\n  }, []);\n\n  return (\n    <>\n    <div className=\"form\">\n      <div className=\"form-top\">\n        <img className=\"form-svg-top\" src={priceTagSvg}></img>\n      </div>\n      <div className=\"form-form\">\n        <h1>Create Listing</h1>\n        {redirect && <Redirect to={`/listings/${redirectId}`} />}\n        <form>\n          {/* Title */}\n          <label for=\"title\">\n            <h4>Title:</h4>\n          </label>\n          <input\n            className=\"form-title-input\"\n            id=\"title\"\n            name=\"title\"\n            type=\"text\"\n            value={listingData.title}\n            onChange={(e) =>\n              setListingData({ ...listingData, title: e.target.value })\n            }\n          />\n          <div className=\"error-div\">\n            {<p className=\"error\">{errors.title}</p>}\n          </div>\n\n          {/* Price */}\n          <label for=\"price\">\n            <h4>Price:</h4>\n          </label>\n          <div className=\"form-input\">\n            <h2>$</h2>\n            <input\n              className=\"form-price-input\"\n              id=\"price\"\n              name=\"price\"\n              type=\"number\"\n              placeholder=\"Price\"\n              value={listingData.price}\n              onChange={(e) =>\n                setListingData({ ...listingData, price: e.target.value })\n              }\n            />\n          </div>\n          <div className=\"error-div\">\n            {<p className=\"error\">{errors.price}</p>}\n          </div>\n\n          {/* Description */}\n          <label for=\"description\">\n            <h4>Description:</h4>\n          </label>\n          <textarea\n            className=\"form-desc-textarea\"\n            id=\"description\"\n            name=\"description\"\n            value={listingData.description}\n            onChange={(e) =>\n              setListingData({ ...listingData, description: e.target.value })\n            }\n          />\n          <div className=\"error-div\">\n            {<p className=\"error\">{errors.description}</p>}\n          </div>\n\n          {/* Image File Upload */}\n          <label for=\"files\">\n            <h4>Images:</h4>\n          </label>\n          <input\n            className=\"file-input\"\n            type=\"file\"\n            id=\"files\"\n            name=\"files\"\n            accept=\"image/png, image/jpeg\"\n            multiple\n            onChange={(event) => {\n              console.log(event.target.files);\n              if (currentListing) {\n                console.log(\"dispatched\");\n                setCurrentListingImages({\n                  image1: null,\n                  image2: null,\n                  image3: null,\n                });\n                console.log(currentListing);\n              }\n              if (event.target.files) {\n                // Empty array to remove previous files onchange\n                listingImages.length = 0;\n                // initialize empty images object\n                let images = {};\n                // add imgfiles to images object\n                for (let file in event.target.files) {\n                  images[file] = event.target.files[file];\n                }\n                // set listingImages state to images object from above\n                setListingImages(images);\n                console.log(listingImages);\n              }\n            }}\n          />\n          <div className=\"error-div\">\n            {<p className=\"error\">{errors.image}</p>}\n          </div>\n\n          {/* Files Preview Div */}\n\n          <h4>Image Preview:</h4>\n          <div className=\"form-files\">\n            {listingImages[0] ? (\n              <img\n                className=\"files-img\"\n                src={URL.createObjectURL(listingImages[0])}\n              />\n            ) : currentListingImages?.image1 ? (\n              <img className=\"files-img\" src={currentListingImages?.image1} />\n            ) : null}\n            {listingImages[1] ? (\n              <img\n                className=\"files-img\"\n                src={URL.createObjectURL(listingImages[1])}\n              />\n            ) : currentListingImages?.image2 ? (\n              <img className=\"files-img\" src={currentListingImages?.image2} />\n            ) : null}\n            {listingImages[2] ? (\n              <img\n                className=\"files-img\"\n                src={URL.createObjectURL(listingImages[2])}\n              />\n            ) : currentListingImages?.image3 ? (\n              <img className=\"files-img\" src={currentListingImages?.image3} />\n            ) : null}\n          </div>\n\n          {/* <input type=\"file\" multiple={true} onChange={(event) => setListingData({ ...listingData, selectedFile: event.target.files[0] })}></input> */}\n              \n          { \n            loading\n            ?\n            <div className=\"button-secondary center-button\">\n              Submit\n              <ClipLoader color=\"grey\" loading={loading} size={15} />\n            </div>\n            :\n            <button\n            className=\"button-primary\"\n            type=\"submit\"\n            style={{ marginTop: 25 }}\n            onClick={handleSubmit}\n            >\n              Submit\n            </button>\n          }\n          \n        </form>\n      </div>\n      <div className=\"form-bg\">\n        <img className=\"form-svg\" src={priceTagSvg}></img>\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default ListingForm;\n","/Users/eskimo/Coding/Lime-market/client/src/routes/SignupPage.js",["187","188","189","190"],"/Users/eskimo/Coding/Lime-market/client/src/api/api.js",[],"/Users/eskimo/Coding/Lime-market/client/src/pagination/Pagination.js",[],"/Users/eskimo/Coding/Lime-market/client/src/pagination/usePagination.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/EditMenuBackdrop.js",[],"/Users/eskimo/Coding/Lime-market/client/src/reducers/currentListing.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/ImageCarousel.js",["191","192","193","194","195","196"],"import {useState, useEffect} from 'react'\nimport {motion, AnimatePresence} from 'framer-motion'\nimport left from '../assets/leftarrow.svg'\nimport right from '../assets/rightarrow.svg'\nimport { useSwipeable } from \"react-swipeable\";\n\nfunction ImageCarousel({toggleCarousel, setToggleCarousel, currentImage, listing}) {\n    const [activeIndex, setActiveIndex] = useState(currentImage)\n    const listingImages = [\n        listing?.image1, \n        listing?.image2,\n        listing?.image3\n    ]\n    const listingCount = listingImages?.filter(l => l !== null).length\n    console.log(listingImages)\n\n    const updateIndex = (newIndex) => {\n        if (newIndex < 0) {\n            newIndex = listingCount - 1;\n        } else if (newIndex >= listingCount) {\n            newIndex = 0;\n        }\n\n        setActiveIndex(newIndex);\n    };\n\n    const handlers = useSwipeable({\n        onSwipedLeft: () => updateIndex(activeIndex + 1),\n        onSwipedRight: () => updateIndex(activeIndex - 1)\n    });\n\n    return (\n        <>\n            <AnimatePresence>\n            <motion.div className=\"carousel-backdrop\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n            >\n                <img\n                    className=\"carousel-arrow carousel-arrow-left\"\n                    onClick={() => {\n                        updateIndex(activeIndex - 1);\n                    }}\n                    src={left}\n                />\n                <img\n                    className=\"carousel-arrow carousel-arrow-right\"\n                    onClick={() => {\n                        updateIndex(activeIndex + 1);\n                    }}\n                    src={right}\n                />\n                <motion.div className=\"carousel-wrapper\"\n                    initial={{ scale: 0, opacity: 0 }}\n                    animate={{ scale: 1, opacity: 1 }}\n                    exit={{ scale: 0, opacity: 0 }}\n                    transition={{ type: 'spring', bounce: 0.25 }} \n                    {...handlers}  \n                >\n                    <div \n                        className=\"carousel-inner\"\n                        style={{ transform: `translateX(-${activeIndex * 100}%)` }}\n                    >   \n                        {listing?.image1\n                            ?\n                            <div className=\"carousel-item\">\n                                <img src={listing?.image1} className=\"carousel-img\"/>\n                            </div>\n                            : null\n                        }\n                        {listing?.image2\n                            ?\n                            <div className=\"carousel-item\">\n                                <img src={listing?.image2} className=\"carousel-img\"/>\n                            </div>\n                            : null\n                        }\n                        {listing?.image3\n                            ?\n                            <div className=\"carousel-item\">\n                                <img src={listing?.image3} className=\"carousel-img\"/>\n                            </div>\n                            : null\n                        }\n                    </div>\n                </motion.div>\n                <motion.div className=\"carousel-pagin\"\n                    initial={{ scale: 0, opacity: 0 }}\n                    animate={{ scale: 1, opacity: 1 }}\n                    exit={{ scale: 0, opacity: 0 }}\n                    transition={{ type: 'spring', bounce: 0.25 }} \n                >\n                    {listingImages?.filter(l => l !== null).map((l, i) => {\n                        return (\n                            <button\n                                className={`carousel-pagin-button ${i === activeIndex ? \"carousel-pagin-button-active\" : \"\"}`}\n                                onClick={() => {\n                                    updateIndex(i);\n                                }}\n                            >\n                            </button>\n                        );\n                    })}\n                </motion.div>\n                <motion.div className=\"carousel-close\"\n                    initial={{ scale: 0, opacity: 0 }}\n                    animate={{ scale: 1, opacity: 1 }}\n                    exit={{ scale: 0, opacity: 0 }}\n                    transition={{ type: 'spring', bounce: 0.25 }} \n                >\n                    <button \n                        className=\"carousel-close-button\"\n                        onClick={() => setToggleCarousel(!toggleCarousel)}\n                    >\n                        Close\n                    </button>\n                </motion.div>\n            </motion.div>\n            </AnimatePresence>\n        </>\n    )\n}\n\nexport default ImageCarousel\n","/Users/eskimo/Coding/Lime-market/client/src/components/ScrollToTop.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":17,"column":8,"nodeType":"203","endLine":17,"endColumn":10,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":2,"column":26,"nodeType":"207","messageId":"208","endLine":2,"endColumn":36},{"ruleId":"205","severity":1,"message":"209","line":11,"column":18,"nodeType":"207","messageId":"208","endLine":11,"endColumn":37},{"ruleId":"205","severity":1,"message":"210","line":14,"column":8,"nodeType":"207","messageId":"208","endLine":14,"endColumn":19},{"ruleId":"211","severity":1,"message":"212","line":110,"column":64,"nodeType":"213","messageId":"214","endLine":110,"endColumn":66},{"ruleId":"201","severity":1,"message":"215","line":237,"column":8,"nodeType":"203","endLine":237,"endColumn":21,"suggestions":"216"},{"ruleId":"201","severity":1,"message":"217","line":276,"column":8,"nodeType":"203","endLine":276,"endColumn":10,"suggestions":"218"},{"ruleId":"219","severity":1,"message":"220","line":311,"column":25,"nodeType":"221","endLine":311,"endColumn":43},{"ruleId":"219","severity":1,"message":"220","line":324,"column":21,"nodeType":"221","endLine":324,"endColumn":80},{"ruleId":"219","severity":1,"message":"220","line":327,"column":49,"nodeType":"221","endLine":327,"endColumn":108},{"ruleId":"219","severity":1,"message":"220","line":328,"column":49,"nodeType":"221","endLine":328,"endColumn":108},{"ruleId":"219","severity":1,"message":"220","line":345,"column":29,"nodeType":"221","endLine":345,"endColumn":63},{"ruleId":"219","severity":1,"message":"220","line":413,"column":41,"nodeType":"221","endLine":419,"endColumn":43},{"ruleId":"219","severity":1,"message":"220","line":431,"column":53,"nodeType":"221","endLine":434,"endColumn":55},{"ruleId":"205","severity":1,"message":"222","line":1,"column":40,"nodeType":"207","messageId":"208","endLine":1,"endColumn":50},{"ruleId":"205","severity":1,"message":"223","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":15},{"ruleId":"205","severity":1,"message":"224","line":8,"column":10,"nodeType":"207","messageId":"208","endLine":8,"endColumn":16},{"ruleId":"205","severity":1,"message":"225","line":10,"column":10,"nodeType":"207","messageId":"208","endLine":10,"endColumn":23},{"ruleId":"205","severity":1,"message":"226","line":14,"column":10,"nodeType":"207","messageId":"208","endLine":14,"endColumn":17},{"ruleId":"205","severity":1,"message":"227","line":14,"column":19,"nodeType":"207","messageId":"208","endLine":14,"endColumn":29},{"ruleId":"201","severity":1,"message":"202","line":21,"column":6,"nodeType":"203","endLine":21,"endColumn":8,"suggestions":"228"},{"ruleId":"205","severity":1,"message":"209","line":2,"column":18,"nodeType":"207","messageId":"208","endLine":2,"endColumn":37},{"ruleId":"219","severity":1,"message":"220","line":91,"column":23,"nodeType":"221","endLine":94,"endColumn":25},{"ruleId":"219","severity":1,"message":"220","line":155,"column":21,"nodeType":"221","endLine":159,"endColumn":23},{"ruleId":"211","severity":1,"message":"212","line":226,"column":23,"nodeType":"213","messageId":"214","endLine":226,"endColumn":25},{"ruleId":"201","severity":1,"message":"229","line":281,"column":6,"nodeType":"203","endLine":281,"endColumn":19,"suggestions":"230"},{"ruleId":"205","severity":1,"message":"231","line":17,"column":11,"nodeType":"207","messageId":"208","endLine":17,"endColumn":15},{"ruleId":"219","severity":1,"message":"220","line":86,"column":21,"nodeType":"221","endLine":86,"endColumn":65},{"ruleId":"232","severity":1,"message":"233","line":136,"column":29,"nodeType":"221","endLine":136,"endColumn":32},{"ruleId":"205","severity":1,"message":"209","line":5,"column":18,"nodeType":"207","messageId":"208","endLine":5,"endColumn":37},{"ruleId":"201","severity":1,"message":"234","line":20,"column":6,"nodeType":"203","endLine":20,"endColumn":8,"suggestions":"235"},{"ruleId":"201","severity":1,"message":"236","line":23,"column":8,"nodeType":"203","endLine":23,"endColumn":10,"suggestions":"237"},{"ruleId":"219","severity":1,"message":"220","line":15,"column":21,"nodeType":"221","endLine":15,"endColumn":46},{"ruleId":"205","severity":1,"message":"238","line":6,"column":10,"nodeType":"207","messageId":"208","endLine":6,"endColumn":14},{"ruleId":"205","severity":1,"message":"239","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":15},{"ruleId":"205","severity":1,"message":"240","line":21,"column":12,"nodeType":"207","messageId":"208","endLine":21,"endColumn":18},{"ruleId":"211","severity":1,"message":"212","line":88,"column":64,"nodeType":"213","messageId":"214","endLine":88,"endColumn":66},{"ruleId":"201","severity":1,"message":"241","line":135,"column":8,"nodeType":"203","endLine":135,"endColumn":34,"suggestions":"242"},{"ruleId":"219","severity":1,"message":"220","line":149,"column":17,"nodeType":"221","endLine":149,"endColumn":45},{"ruleId":"205","severity":1,"message":"243","line":1,"column":10,"nodeType":"207","messageId":"208","endLine":1,"endColumn":18},{"ruleId":"205","severity":1,"message":"206","line":3,"column":20,"nodeType":"207","messageId":"208","endLine":3,"endColumn":30},{"ruleId":"201","severity":1,"message":"244","line":252,"column":6,"nodeType":"203","endLine":252,"endColumn":8,"suggestions":"245"},{"ruleId":"219","severity":1,"message":"220","line":258,"column":9,"nodeType":"221","endLine":258,"endColumn":57},{"ruleId":"219","severity":1,"message":"220","line":367,"column":15,"nodeType":"221","endLine":370,"endColumn":17},{"ruleId":"219","severity":1,"message":"220","line":372,"column":15,"nodeType":"221","endLine":372,"endColumn":79},{"ruleId":"219","severity":1,"message":"220","line":375,"column":15,"nodeType":"221","endLine":378,"endColumn":17},{"ruleId":"219","severity":1,"message":"220","line":380,"column":15,"nodeType":"221","endLine":380,"endColumn":79},{"ruleId":"219","severity":1,"message":"220","line":383,"column":15,"nodeType":"221","endLine":386,"endColumn":17},{"ruleId":"219","severity":1,"message":"220","line":388,"column":15,"nodeType":"221","endLine":388,"endColumn":79},{"ruleId":"219","severity":1,"message":"220","line":415,"column":9,"nodeType":"221","endLine":415,"endColumn":53},{"ruleId":"205","severity":1,"message":"246","line":10,"column":12,"nodeType":"207","messageId":"208","endLine":10,"endColumn":23},{"ruleId":"219","severity":1,"message":"220","line":86,"column":21,"nodeType":"221","endLine":86,"endColumn":63},{"ruleId":"219","severity":1,"message":"220","line":95,"column":33,"nodeType":"221","endLine":95,"endColumn":141},{"ruleId":"232","severity":1,"message":"233","line":162,"column":29,"nodeType":"221","endLine":162,"endColumn":32},{"ruleId":"205","severity":1,"message":"247","line":1,"column":19,"nodeType":"207","messageId":"208","endLine":1,"endColumn":28},{"ruleId":"219","severity":1,"message":"220","line":40,"column":17,"nodeType":"221","endLine":46,"endColumn":19},{"ruleId":"219","severity":1,"message":"220","line":47,"column":17,"nodeType":"221","endLine":53,"endColumn":19},{"ruleId":"219","severity":1,"message":"220","line":68,"column":33,"nodeType":"221","endLine":68,"endColumn":86},{"ruleId":"219","severity":1,"message":"220","line":75,"column":33,"nodeType":"221","endLine":75,"endColumn":86},{"ruleId":"219","severity":1,"message":"220","line":82,"column":33,"nodeType":"221","endLine":82,"endColumn":86},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["250"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'AnimateSharedLayout' is defined but never used.","'LoginButton' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch', 'listingId', and 'user'. Either include them or remove the dependency array.",["251"],"React Hook useEffect has missing dependencies: 'listing?.description' and 'listing?.price'. Either include them or remove the dependency array.",["252"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","'Loading' is defined but never used.","'motion' is defined but never used.","'fetchListings' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["253"],"React Hook useEffect has missing dependencies: 'listing.id', 'listingData', and 'listingId'. Either include them or remove the dependency array.",["254"],"'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["255"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["256"],"'Link' is defined but never used.","'Tooltip' is defined but never used.","'toggle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'listingId' and 'user'. Either include them or remove the dependency array.",["257"],"'useAuth0' is defined but never used.","React Hook useEffect has missing dependencies: 'currentListing?.description', 'currentListing?.image1', 'currentListing?.image2', 'currentListing?.image3', 'currentListing.length', 'currentListing?.price', 'currentListing?.title', and 'listingImages'. Either include them or remove the dependency array.",["258"],"'currentUser' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"259","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},"Update the dependencies array to be: [dispatch]",{"range":"276","text":"277"},"Update the dependencies array to be: [currentUser, dispatch, listingId, user]",{"range":"278","text":"279"},"Update the dependencies array to be: [listing?.description, listing?.price]",{"range":"280","text":"281"},{"range":"282","text":"277"},"Update the dependencies array to be: [currentUser, listing.id, listingData, listingId]",{"range":"283","text":"284"},"Update the dependencies array to be: [userId]",{"range":"285","text":"286"},"Update the dependencies array to be: [user]",{"range":"287","text":"288"},"Update the dependencies array to be: [currentUser, currentPage, listingId, user]",{"range":"289","text":"290"},"Update the dependencies array to be: [currentListing?.description, currentListing?.image1, currentListing?.image2, currentListing?.image3, currentListing.length, currentListing?.price, currentListing?.title, listingImages]",{"range":"291","text":"292"},[573,575],"[dispatch]",[8150,8163],"[currentUser, dispatch, listingId, user]",[9245,9247],"[listing?.description, listing?.price]",[683,685],[9794,9807],"[currentUser, listing.id, listingData, listingId]",[629,631],"[userId]",[660,662],"[user]",[5100,5126],"[currentUser, currentPage, listingId, user]",[8039,8041],"[currentListing?.description, currentListing?.image1, currentListing?.image2, currentListing?.image3, currentListing.length, currentListing?.price, currentListing?.title, listingImages]"]