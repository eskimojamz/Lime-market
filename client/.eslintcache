[{"/Users/eskimo/Coding/Hoppang/client/src/components/LoginButton.js":"1","/Users/eskimo/Coding/Lime-market/client/src/index.js":"2","/Users/eskimo/Coding/Lime-market/client/src/App.js":"3","/Users/eskimo/Coding/Lime-market/client/src/actions/actions.js":"4","/Users/eskimo/Coding/Lime-market/client/src/reducers/index.js":"5","/Users/eskimo/Coding/Lime-market/client/src/routes/Home.js":"6","/Users/eskimo/Coding/Lime-market/client/src/routes/ListingInfoPage.js":"7","/Users/eskimo/Coding/Lime-market/client/src/routes/ListingsPage.js":"8","/Users/eskimo/Coding/Lime-market/client/src/components/Navbar.js":"9","/Users/eskimo/Coding/Lime-market/client/src/routes/LoginPage.js":"10","/Users/eskimo/Coding/Lime-market/client/src/routes/ProfilePage.js":"11","/Users/eskimo/Coding/Lime-market/client/src/routes/FormPage.js":"12","/Users/eskimo/Coding/Lime-market/client/src/components/Tooltip.js":"13","/Users/eskimo/Coding/Lime-market/client/src/reducers/listings.js":"14","/Users/eskimo/Coding/Lime-market/client/src/reducers/listing.js":"15","/Users/eskimo/Coding/Lime-market/client/src/reducers/comments.js":"16","/Users/eskimo/Coding/Lime-market/client/src/components/Listing.js":"17","/Users/eskimo/Coding/Lime-market/client/src/components/Loading.js":"18","/Users/eskimo/Coding/Lime-market/client/src/components/LoginButton.js":"19","/Users/eskimo/Coding/Lime-market/client/src/components/LogoutButton.js":"20","/Users/eskimo/Coding/Lime-market/client/src/components/MenuButton.js":"21","/Users/eskimo/Coding/Lime-market/client/src/components/ListingForm.js":"22","/Users/eskimo/Coding/Lime-market/client/src/routes/SignupPage.js":"23","/Users/eskimo/Coding/Lime-market/client/src/api/api.js":"24"},{"size":304,"mtime":1632990424348,"results":"25","hashOfConfig":"26"},{"size":621,"mtime":1633501902230,"results":"27","hashOfConfig":"28"},{"size":1549,"mtime":1635145804667,"results":"29","hashOfConfig":"28"},{"size":3989,"mtime":1635310903458,"results":"30","hashOfConfig":"28"},{"size":300,"mtime":1635228712230,"results":"31","hashOfConfig":"28"},{"size":2075,"mtime":1634214126194,"results":"32","hashOfConfig":"28"},{"size":17138,"mtime":1635242276799,"results":"33","hashOfConfig":"28"},{"size":879,"mtime":1635241499203,"results":"34","hashOfConfig":"28"},{"size":6102,"mtime":1635146557870,"results":"35","hashOfConfig":"28"},{"size":4651,"mtime":1635145887115,"results":"36","hashOfConfig":"28"},{"size":1733,"mtime":1633067597121,"results":"37","hashOfConfig":"28"},{"size":469,"mtime":1634282097631,"results":"38","hashOfConfig":"28"},{"size":496,"mtime":1635143977059,"results":"39","hashOfConfig":"28"},{"size":651,"mtime":1633060219397,"results":"40","hashOfConfig":"28"},{"size":224,"mtime":1634731088239,"results":"41","hashOfConfig":"28"},{"size":224,"mtime":1635242102456,"results":"42","hashOfConfig":"28"},{"size":6612,"mtime":1635241732655,"results":"43","hashOfConfig":"28"},{"size":245,"mtime":1632990424348,"results":"44","hashOfConfig":"28"},{"size":254,"mtime":1634230618432,"results":"45","hashOfConfig":"28"},{"size":220,"mtime":1632990424348,"results":"46","hashOfConfig":"28"},{"size":1491,"mtime":1632990424349,"results":"47","hashOfConfig":"28"},{"size":10503,"mtime":1635749231051,"results":"48","hashOfConfig":"28"},{"size":4149,"mtime":1634277300852,"results":"49","hashOfConfig":"28"},{"size":1942,"mtime":1635297123742,"results":"50","hashOfConfig":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ff4vti",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"cd2gkb",{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"55"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"/Users/eskimo/Coding/Hoppang/client/src/components/LoginButton.js",[],"/Users/eskimo/Coding/Lime-market/client/src/index.js",[],["112","113"],"/Users/eskimo/Coding/Lime-market/client/src/App.js",["114","115","116"],"import React, { useState, useEffect, createContext } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\n\nimport { Route, Switch, useLocation } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport SignupPage from './routes/SignupPage'\nimport LoginPage from './routes/LoginPage'\nimport Home from './routes/Home'\nimport ListingsPage from './routes/ListingsPage'\nimport ListingInfoPage from './routes/ListingInfoPage'\nimport FormPage from './routes/FormPage'\nimport ProfilePage from './routes/ProfilePage'\n\nexport const UserContext = createContext(null)\n\nconst App = () => {\n    const location = useLocation()\n    const [currentUser, setCurrentUser] = useState(null)\n\n  return (\n      <>\n        <div className=\"wrapper\">\n          <UserContext.Provider value={{currentUser, setCurrentUser}}>\n          <Navbar />\n          <div className=\"container\">\n            <Switch location={location} key={location.pathname}>\n              <Route path='/' exact component={Home} />\n              <Route path='/register/' component={SignupPage} />\n              <Route path='/login/' component={LoginPage} />\n              <Route exact path='/listings' component={ListingsPage} />\n              <Route path='/listings/:listingId' exact component={ListingInfoPage} />\n              <Route path='/form' exact component={FormPage} />\n              <Route path='/profile/' component={ProfilePage} />\n            </Switch>\n          </div>\n          </UserContext.Provider>\n        </div>\n    </>\n  )\n}\n\nexport default App","/Users/eskimo/Coding/Lime-market/client/src/actions/actions.js",[],"/Users/eskimo/Coding/Lime-market/client/src/reducers/index.js",[],"/Users/eskimo/Coding/Lime-market/client/src/routes/Home.js",["117","118"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport heroImg from '../assets/hero-img.svg'\nimport { motion } from 'framer-motion'\n\nconst Home = () => {\n    const history = useHistory()\n\n    return (\n        <>\n        \n        <div className=\"hero\">\n            <motion.div \n                className=\"hero-mobile\"\n            >\n                <img src={heroImg} className=\"hero-img\" />\n            </motion.div>\n            \n            <div className=\"hero-left\">\n                <motion.div\n                    initial={{ y: 20, opacity: 0 }}\n                    animate={{ y: 0, opacity: 1 }}\n                    transition={{ delay: 1.5, duration: 0.25 }}\n                >\n                    <h1>buy & sell</h1>\n                    <h1 className=\"highlight\">safely & affordably</h1>\n                    <p>Hoppang makes it easy to buy and sell items of all kinds on a safe and secure platform. Powered by the Paypal payment system, users can sell or purchase items with confidence.</p>\n                </motion.div>\n                <motion.button \n                    className=\"button-primary\" \n                    initial={{ y: 20, opacity: 0 }}\n                    animate={{ y: 0, opacity: 1 }}\n                    transition={{ delay: 1.75, duration: 0.25 }}\n                    onClick={() => {\n                        history.push('/listings')\n                    }}>\n                        See Listings\n                </motion.button>\n            </div>\n\n            <motion.div \n                className=\"hero-right\"\n                initial={{ y: 20, opacity: 0 }}\n                animate={{ y: 0, opacity: 1 }}\n                transition={{ delay: 2, duration: 0.25 }}\n                >\n                <img src={heroImg} className=\"hero-img\" />\n            </motion.div>\n        </div>\n\n        <motion.div className=\"hero-bottom\"\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n        >\n            {/* Popular Listings */}\n        </motion.div>\n        </>\n    )\n}\n\nexport default Home","/Users/eskimo/Coding/Lime-market/client/src/routes/ListingInfoPage.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135"],"import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { Link, Redirect, useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getListings, updateListing, deleteListing, likeListing, setCurrentListing, addComment, deleteComment, getComments, getListing, likeCount, getLikes, getUser } from '../actions/actions';\nimport moment from 'moment';\nimport Lottie from 'react-lottie-segments'\nimport Tooltip from '../components/Tooltip.js';\nimport menu from '../assets/menu-v.svg';\nimport comment from '../assets/comment.svg'\nimport like from '../assets/like.json'\nimport { motion } from 'framer-motion'\nimport { UserContext } from '../App';\nimport axios from 'axios'\nimport LoginButton from '../components/LoginButton';\n\nconst ListingInfoPage = () => {\n    const user = JSON.parse(sessionStorage.getItem('user'))\n    console.log(user?.watchlist)\n    const token = sessionStorage.getItem('token')\n    const dispatch = useDispatch()\n    const { listingId } = useParams()\n    const listing = useSelector((state) => state.listing)\n\n    // const [state, setState] = useState({\n    //     likes: null,\n    //     menuOpen: false,\n    //     edit: false, \n    //     deleted: false, \n    //     liked: null, \n    //     isStopped: true, \n    //     toggle: false, \n    //     newComment: \n    // })\n    const [likes, setLikes] = useState()\n    \n    \n    const [menuOpen, setMenuOpen] = useState(false)\n    const [edit, setEdit] = useState(false)\n    const [deleted, setDeleted] = useState(false)\n\n    const [liked, setLiked] = useState()\n    const [isStopped, setIsStopped] = useState(true)\n    const listingComments = useSelector(state => state.comments)\n    const [toggle, setToggle] = useState(false)\n    const [newComment, setNewComment] = useState(\"\")\n    const [deleteModalOn, setDeleteModal] = useState(false)\n\n    const toggleLike = () => {\n        if (!liked) {\n            axios.patch(`http://localhost:8000/listings/${listingId}/like`, \n                {\n                    like_count: likes + 1\n                },\n                {\n                    headers: {\n                        'Authorization': `Token ${token}`\n                    }\n                }\n            )\n            .then(() => {\n                console.log(user?.watchlist)\n                const key = Object.values(user?.watchlist).length\n                console.log(key)\n                let newWatchlist = user?.watchlist\n                newWatchlist[key] = listingId\n                return axios.patch(`http://localhost:8000/users/update/${user.username}`, \n                    {\n                        watchlist: newWatchlist\n                    },\n                    {\n                        headers: {\n                            'Authorization': `Token ${token}`\n                        }\n                    }    \n                )\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/users/view/${user.username}`)\n                    .then((response) => {\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                        getLikes(listingId)\n                    })\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n                    .then(response => {\n                        setLikes(response.data.like_count)\n                        setIsStopped(!isStopped)\n                        setLiked(!liked)\n                    })\n            })\n        } else if (liked) {\n            axios.patch(`http://localhost:8000/listings/${listingId}/like`, \n                {\n                    like_count: likes - 1\n                },\n                {\n                    headers: {\n                        'Authorization': `Token ${token}`\n                    }\n                }\n            )\n            .then(() => {\n                console.log(user?.watchlist)\n                let arr = Object.values(user?.watchlist)\n                console.log(arr)\n                let index = arr.indexOf(listingId)\n                console.log(index)\n                if (index > -1) {\n                    arr.splice(index, 1)\n                }\n                const newWatchlist = {...arr}\n                console.log(newWatchlist)\n                return axios.patch(`http://localhost:8000/users/update/${user.username}`, \n                    {\n                        watchlist: newWatchlist\n                    },\n                    {\n                        headers: {\n                            'Authorization': `Token ${token}`\n                        }\n                    }    \n                )\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/users/view/${user.username}`)\n                    .then((response) => {\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                    })\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n                    .then(response => {\n                        setLikes(response.data.like_count)\n                        setIsStopped(!isStopped)\n                        setLiked(!liked)\n                    })\n            })\n        }\n    }\n\n    const getLikes = (listingId) => {\n        axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n        .then(response => {\n            setLikes(response.data.like_count)\n        })\n    }\n\n    const handleEdit = () => {\n        dispatch(setCurrentListing(listingId))\n        setEdit(true)\n    }\n\n    const handleDelete = () => {\n        dispatch(deleteListing(listingId))\n        setDeleted(true)\n    }\n\n    const handleComment = (e) => {\n        e.preventDefault()\n        dispatch(addComment(\n            // comment\n            {   \n                creator: user.username,\n                // creatorImg: user.profile_img,\n                listing: listingId,\n                content: newComment,\n            },\n            {\n                headers: {\n                    'Authorization': `Token ${token}`\n                }\n            } \n        ))\n        setNewComment(\"\")\n        dispatch(getComments(listingId))\n    }\n\n    const handleCommentDelete = (commentId) => {\n        dispatch(deleteComment(\n            commentId,\n            {\n                headers: {\n                    'Authorization': `Token ${token}`\n                }\n            }\n        ))\n        window.location.reload()\n    }\n\n    const paypal = useRef();\n    console.log(listingComments)\n    useEffect(() => {\n        dispatch(getListing(listingId))\n        if (user) {\n            const likedBool = Object.values(user?.watchlist).includes(listingId.toString())\n            setIsStopped(!likedBool)\n            setLiked(likedBool)\n        }\n        getLikes(listingId)\n        dispatch(getComments(listingId))\n    }, [])\n\n    useEffect(() => {\n        const product = {\n            price: listing?.price,\n            description: listing?.description,\n        };\n\n        window.paypal\n            .Buttons({\n            style: {\n                color: 'silver',\n                size: 'medium',\n                layout: 'vertical',\n                label: 'checkout',\n            },\n            createOrder: (data, actions) => {\n                return actions.order.create({\n                purchase_units: [\n                    {\n                    description: product.description,\n                    amount: {\n                        currency_code: \"USD\",\n                        value: product.price\n                    }\n                    }\n                ]\n                });\n            },\n            onApprove: async (data, actions) => {\n                const order = await actions.order.capture();\n\n                console.log(order);\n            },\n            onError: err => {\n                console.log(err);\n            }\n            })\n            .render(paypal.current);\n    }, []);\n    \n    return (\n        <>\n        { listing && \n        <motion.div className=\"page-wrapper\"\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ delay: 0.5, duration: 0.25 }}\n        >\n\n        <Tooltip content=\"Please sign in to like and save listings\" toggle={toggle} setToggle={setToggle}/>\n            \n            { deleted && <Redirect to=\"/listings\" /> }\n\n            {/* Listing Info */}\n            <div className=\"listing-info\">\n                { (listing.creator === user?.username) &&\n                <div className=\"listing-info-edit-menu\">\n                    <button className=\"button-menu\" onClick={() => setMenuOpen(!menuOpen)} >\n                        <img src={menu} />\n                    </button>\n                    { menuOpen &&\n                    <div className=\"edit-menu\">\n                        <button className=\"button-menu-edit\"><h5 onClick={handleEdit}>Edit</h5></button>\n                        <button className=\"button-menu-delete\"><h5 onClick={handleDelete}>Delete</h5></button>\n                    </div>\n                    }\n                </div>\n                }\n                \n                { edit && <Redirect to=\"/form\" /> }\n                <div className=\"listing-info-img\">\n                    <img src={listing.image1} />\n                </div>\n                <div className=\"listing-info-title\">\n                    <h1>{listing.title}</h1>\n                </div>\n                <div className=\"listing-info-desc\">\n                    <p>{listing.description}</p>\n                </div>\n                <div className=\"listing-info-bottom\">\n                    <div className=\"listing-info-price\">\n                        <h1>${listing.price}</h1>\n                    </div>\n                    <div className=\"listing-info-creator\">\n                        <div className=\"listing-info-creator-img\">\n                            \n                            <img src={listing.creatorImg} />\n                            \n                        </div>\n                        <div className=\"listing-info-creator-name\">\n                            \n                            <h5>{listing.creatorName}</h5>\n                            <h4>Seller  ✓</h4>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"listing-info-paypal\" ref={paypal}>\n                   {/* Paypal */}\n                </div>\n\n                <div className=\"listing-info-like\">\n                    <button \n                        className=\"listing-info-like-button\"\n                        onClick={user ? toggleLike : setToggle}\n                    >\n                    \n                        <Lottie\n                            options={{\n                                loop: false,\n                                autoplay: false,\n                                animationData: like,\n                                rendererSettings: {\n                                    preserveAspectRatio: 'xMidYMid slice'\n                                }\n                            }}\n                            height=\"35px\"\n                            width=\"35px\"\n                            isStopped={isStopped}\n                        />\n                        \n                        <span className=\"listing-info-like-text\"><h5>{likes} Likes</h5></span>\n                    </button>\n                </div>\n\n                {/* Comments */}\n                <div className=\"comments-section\">\n                    <div className=\"comments-show\">\n                        {listingComments.map((comment, key) => {\n                            const currentUserData = {\n                                sub: comment.creator,\n                                nickname: comment.creatorName,\n                                picture: comment.creatorImg,\n                            }\n                            const commentId = comment.id\n                            return (\n                                <div key={key} className=\"comment-comment\">\n                                    {/* Delete Modal */}\n                                    <div className={deleteModalOn ? \"delete-modal-backdrop\" : \"display-none\"}>\n                                        <div className=\"delete-modal-overlay\">\n                                            <div>\n                                                <h3>Are you sure you want to delete this comment?</h3>\n                                            </div>\n                                            <div className=\"delete-modal-overlay-bottom\">\n                                                <button className=\"delete-modal-yes\" onClick={() => handleCommentDelete(commentId)} >Yes</button>\n                                                <button className=\"button-secondary\" onClick={() => setDeleteModal(false)}>No</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {/* ------------ */}\n\n                                    <div className=\"comment-body\">\n                                        <p>{comment.content}Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum</p>\n                                    </div>\n\n                                    <div className=\"comment-bottom\">\n                                        <div className=\"comment-user\">\n                                            {/* <div className=\"comment-pic\">\n                                                <Link to={'/profile/'}>\n                                                    <img \n                                                        src={comment.creatorImg} \n                                                        onClick={() => {\n                                                            localStorage.setItem('currentUser', JSON.stringify(currentUserData))\n                                                        }}\n                                                    />\n                                                </Link>\n                                            </div> */}\n                                            <div className=\"comment-name\">\n                                                <h6>{comment.creator}</h6>\n                                                {(comment.creator === listing?.creator) && \n                                                    <h4>Seller  ✓</h4>\n                                                }\n                                            </div>\n                                        </div>\n                                        <div className=\"comment-date\"><p>{moment(`${comment.date_created}`).format('lll')}</p></div>\n                                    </div>\n                                    {(comment.creator === user.username) &&\n                                    <div className=\"comment-bottom-delete\">\n                                        <button \n                                            className=\"comment-delete-button\"\n                                            onClick={ () =>\n                                                setDeleteModal(true)\n                                            }>\n                                            Delete\n                                        </button>\n                                    </div>\n                                    }\n                                </div>\n                            );\n                            })}\n                    </div>\n                    <div className=\"comments-input\">\n                        <form onSubmit={handleComment}>\n                            <textarea \n                                className=\"input-box\" \n                                placeholder={ user ? \"Type your comment here\" : \"Please sign in to comment\" } \n                                value={newComment} \n                                onChange={(event) => {\n                                    setNewComment(event.target.value)\n                                }} \n                            />\n                            { user \n                            ? \n                            <button \n                                className=\"button-primary\"\n                                type=\"submit\"\n                            >\n                                Submit\n                            </button>\n                            : \n                            <Link to='/login'>\n                                <button \n                                    className=\"button-secondary\"\n                                >\n                                    Sign-in\n                                </button>\n                            </Link>\n                            }\n                        </form>\n                    </div>\n                </div>\n            </div>    \n        </motion.div>\n        }\n       </>\n    )\n}\n\nexport default ListingInfoPage","/Users/eskimo/Coding/Lime-market/client/src/routes/ListingsPage.js",["136"],"import { useEffect } from 'react'\nimport Listing from '../components/Listing'\nimport Loading from '../components/Loading'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { motion} from 'framer-motion'\nimport { getListings } from '../actions/actions'\n\n\nconst ListingsPage = () => {\n  const dispatch = useDispatch()\n  const listings = useSelector((state) => state.listings)\n  console.log(listings)\n\n  useEffect(() => {\n    dispatch(getListings())\n  }, [])\n\n  return (\n      listings.length > 0 ?\n        (\n        <motion.div \n          className=\"listings-grid\"\n          initial={{ y: 20, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ delay: 0.5, duration: 0.25 }}\n        >\n        {listings.map(listing => <Listing listing={listing} />)}\n        </motion.div>\n        ) :\n      <Loading />   \n  )\n}\n\nexport default ListingsPage\n","/Users/eskimo/Coding/Lime-market/client/src/components/Navbar.js",["137","138"],"import { useState, useEffect, useContext } from 'react'\nimport { motion } from 'framer-motion'\nimport LoginButton from './LoginButton'\nimport LogoutButton from './LogoutButton'\nimport { Link } from 'react-router-dom'\nimport logo from '../assets/logo.svg'\nimport MenuButton from './MenuButton'\nimport { UserContext } from '../App'\n\nconst Navbar = () => {\n    const {currentUser, setCurrentUser} = useContext(UserContext)\n    const user = JSON.parse(sessionStorage.getItem('user'))\n    const [menuOpen, setMenuOpen] = useState(false)\n    const [profileOpen, setProfileOpen] = useState(false)\n    \n    console.log('user', user)\n\n    const logoutAll = () => {\n        sessionStorage.removeItem('token')\n        sessionStorage.removeItem('user')\n        setCurrentUser(null)\n        window.location.reload()\n    }\n\n    return (\n        <>\n        <nav className=\"nav-container\">\n        <div className=\"nav\">\n            <div \n                className=\"nav-left\"\n                >\n                <Link to='/'>\n                    <motion.img \n                        className=\"logo\" \n                        src={logo} \n                        initial={{ y: -20, opacity: 0 }}\n                        animate={{ y: 0, opacity: 1 }}\n                        transition={{ delay: 0.25, duration: 0.25 }}\n                        >\n                    </motion.img>\n                </Link>\n                <motion.h1\n                    initial={{ y: -20, opacity: 0 }}\n                    animate={{ y: 0, opacity: 1 }}\n                    transition={{ delay: 0.5, duration: 0.25 }}\n                    >\n                    Lime Market\n                </motion.h1>\n            </div>\n\n            <MenuButton menuOpen={menuOpen} toggle={() => setMenuOpen(!menuOpen)} />\n\n            {menuOpen && \n            <motion.div \n                className=\"mobile-menu\"\n                // variants={RightLeftFast}\n                // initial=\"hidden\"\n                // animate=\"visible\"\n                // exit=\"exit\"\n            >\n                <div className=\"mobile-menu-top\">\n                <Link to='/listings'><button className=\"listings-nav-btn-mobile\">Listings</button></Link>\n                <Link to='/form'><button className=\"sell-nav-btn-mobile\">Sell Now</button></Link>\n                </div>\n                {user || currentUser\n                    ? (\n                    <>\n                    <div className=\"mobile-menu-profile\">\n                        <div className=\"mobile-menu-profile-left\">\n                            <img className=\"profile-mobile\" src={currentUser?.profile_img || user?.profile_img} />\n                        </div>\n                        <div className=\"mobile-menu-profile-right\">\n                            <h5>Signed in as: </h5>\n                            <h4>{currentUser?.username || user?.username}</h4>\n                        </div>\n                    </div>\n                    <div className=\"mobile-menu-bottom-logout\">\n                        <Link to=\"/profile\">\n                            <button \n                                className=\"profile-btn-mobile\"\n                                >My Profile\n                            </button>\n                        </Link>\n                        <LogoutButton logoutAll={logoutAll} />\n                    </div>\n                    <div className=\"mobile-menu-liked\">\n                        <h2>Liked Items</h2>\n\n                    </div>\n                    </>\n                    )\n                    : <LoginButton />\n                }\n            </motion.div>\n            }\n\n            <div className=\"nav-right-desktop\">\n                <Link to='/listings'>\n                    <button className=\"listings-nav-btn\">\n                        Listings\n                    </button>\n                </Link>\n                <Link to='/form'>\n                    <button className=\"sell-nav-btn\">\n                        Sell Now\n                    </button>\n                </Link>\n                \n                {user || currentUser\n                    ? (\n                    <>\n                    <motion.img \n                        className=\"profile\" \n                        src={currentUser?.profile_img || user?.profile_img} \n                        onClick={() => setProfileOpen(!profileOpen)} \n                        initial={{ y: -20, opacity: 0 }}\n                        animate={{ y: 0, opacity: 1 }}\n                        transition={{ delay: 1.25, duration: 0.25 }}\n                        >\n                    </motion.img>\n                    {profileOpen && (\n                        <motion.div \n                            className=\"profile-menu\"\n                            // variants={RightLeft}\n                            // initial=\"hidden\"\n                            // animate=\"visible\"\n                            // exit=\"exit\"\n                            >\n                            <div className=\"profile-menu-user-top\">\n                                <h5>Signed in as:</h5>\n                                <h5 className=\"bold\">{currentUser?.username || user?.username}</h5>\n                            </div>\n                            <div className=\"profile-menu-user-bottom\">\n                                <Link to=\"/profile\">\n                                    <button \n                                        className=\"profile-btn\"\n                                    >\n                                        My Profile\n                                    </button>\n                                </Link>\n                                <LogoutButton logoutAll={logoutAll} />\n                            </div>\n                            <div className=\"profile-menu-liked\">\n                                <h2>Liked Items</h2>\n\n                            </div>\n                        </motion.div>\n                    )}\n                    </>\n                    )\n                    : <LoginButton />\n                }\n            </div>\n        </div>\n        </nav>\n        </>\n\n    )\n}\n\nexport default Navbar\n\n\n\n","/Users/eskimo/Coding/Lime-market/client/src/routes/LoginPage.js",["139","140","141"],"import React, { useState, useContext } from 'react'\nimport { motion } from 'framer-motion'\nimport axios from 'axios'\nimport { Link, useHistory } from 'react-router-dom' \nimport loginSvg from '../assets/login.svg'\nimport ClipLoader from 'react-spinners/ClipLoader'\nimport { UserContext } from '../App'\n\nfunction LoginPage() {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    // const [fixPassword, setFixPassword] = useState(false)\n    const [invalidLogin, setInvalidLogin] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n    const {currentUser, setCurrentUser} = useContext(UserContext)\n\n    const loginCredentials = {\n        username: username,\n        password: password,\n    }\n\n    const handleSubmit = async(e) => {\n        e.preventDefault()\n        setLoading(true)\n        \n        await axios\n            .post('http://localhost:8000/auth/', {\n                username: `${loginCredentials.username}`,\n                password: `${loginCredentials.password}`\n            })\n            .then((response) => {\n                console.log(response.data.token)\n                sessionStorage.setItem('token', response.data.token)\n\n                axios\n                    .get(`http://localhost:8000/users/view/${username}`)\n                    .then((response) => {\n                        console.log(response)\n                        setCurrentUser(response.data)\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                        console.log(sessionStorage.getItem('user'))\n                    })\n                \n                setLoading(false)\n                history.goBack()\n            })\n            .catch((error) => {\n                console.log(error)\n                setInvalidLogin(true)\n                // console.log(invalidLogin)\n                setLoading(false)\n                return\n            })\n    }\n\n    return(\n        <>\n        <motion.div className=\"page-wrapper\"\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ delay: 0.5, duration: 0.25 }}\n        >\n            <div className=\"login-div\">\n                <div className=\"login-bg\">\n                    <img src={loginSvg} className=\"login-svg\" />\n                </div>\n                <div className=\"login-form-div\">\n                    <div className=\"login-form-title\">\n                        <h1>Welcome Back!</h1>\n                    </div>\n                    <div>\n                        <form className=\"login-form\" onSubmit={handleSubmit}>\n                            <label>\n                                <h5>Username:</h5>\n                                <input \n                                    type=\"text\" \n                                    value={username} \n                                    onChange={e => \n                                        setUsername(e.target.value)\n                                    } \n                                />\n                            </label>\n                            <label>\n                                <h5>Password:</h5>\n                                <input \n                                    type=\"password\" \n                                    value={password} \n                                    onChange={e =>\n                                        setPassword(e.target.value)\n                                    } \n                                />\n                            </label>\n                            <div className='clip-loader'>\n                                {invalidLogin \n                                    ? (<p className=\"invalid\">There is no account with those credentials. Try again.</p>)\n                                    : null\n                                }\n                                <ClipLoader color='green' loading={loading} size={15} />\n                            </div>    \n                                <button className=\"button-primary\" type=\"submit\" value=\"Submit\">Log-in</button>\n                                \n                                    \n                                \n                        </form>\n                    </div>\n                    <div className=\"login-bottom\">\n                        <h5>New Here?</h5>\n                        <Link to='/register'>\n                            <a>Create an account</a>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </motion.div>\n        </>\n    )\n}\n\nexport default LoginPage\n","/Users/eskimo/Coding/Lime-market/client/src/routes/ProfilePage.js",["142","143","144","145","146","147","148"],"import { useState, useEffect } from 'react';\nimport { useDispatch, useParams, useSelector } from 'react-redux'\n\nimport Listing from '../components/Listing'\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport { motion, AnimateSharedLayout} from 'framer-motion'\nimport { setCurrentUser } from '../actions/actions';\n\nconst Profile = () => {\n  const currentUser = JSON.parse(localStorage.getItem('currentUser'))\n  const listings = useSelector((state) => state.listings)\n  const userListings = listings.filter(listing => listing.creator === currentUser.sub)\n  console.log(currentUser)\n\n  const containerVariants = {\n    hidden: { \n      opacity: 0, \n      x: '100vw',\n    },\n    visible: { \n      opacity: 1, \n      x: 0,\n      transition: { duration: 1 }\n    },\n    exit: {\n        x: \"-100vh\",\n        transition: { duration: 1, ease: 'easeInOut' }\n    }\n  };\n\n  return (\n    <div className=\"profile-info-container\">\n      <motion.div className=\"profile-info\"\n        variants={containerVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n        exit=\"exit\"\n      >\n        <div className=\"profile-info-img\">\n          <img src={currentUser.picture} alt={currentUser.nickname} />\n        </div>\n        <div className=\"profile-info-name\">\n          <h2>{currentUser.nickname}</h2>\n        </div>\n        <div className=\"profile-info-listings-label\">\n          <h1>User Listings</h1>\n        </div>\n        <div className=\"profile-info-listings-cards\">\n          {userListings.map(userListing => \n            <Listing listing={userListing} />\n          )}\n          { (userListings.length === 0) && \n            <p>No listings yet!</p>\n          }\n        </div>\n      </motion.div>\n    </div>\n  )\n}\n\nexport default Profile","/Users/eskimo/Coding/Lime-market/client/src/routes/FormPage.js",["149"],"import React from 'react'\nimport ListingForm from '../components/ListingForm'\n\nimport { motion, AnimateSharedLayout} from 'framer-motion'\n\nconst FormPage = () => {\n\n    return (\n        <motion.div className=\"form-grid\"\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ delay: 0.5, duration: 0.25 }}\n        >\n            <ListingForm ></ListingForm>\n        </motion.div>\n    )\n}\n\nexport default FormPage\n","/Users/eskimo/Coding/Lime-market/client/src/components/Tooltip.js",["150"],"import React, { useState } from \"react\";\nimport \"../css/Tooltip.css\";\n\nexport default function Tooltip({ content, toggle, setToggle }) {\n    const toggleModal = () => {\n        setToggle(!toggle);\n    };\n    \n    return (\n        <>\n        {toggle && (\n            <div className=\"modal-backdrop\" onClick={toggleModal}>\n                <div className=\"tooltip-content fade-in\">\n                    <p>{content}</p>\n                </div>\n            </div>\n        )\n        }\n        </>\n  );\n}","/Users/eskimo/Coding/Lime-market/client/src/reducers/listings.js",[],"/Users/eskimo/Coding/Lime-market/client/src/reducers/listing.js",[],"/Users/eskimo/Coding/Lime-market/client/src/reducers/comments.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/Listing.js",["151","152","153","154","155","156"],"import {useEffect, useState} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Lottie from 'react-lottie-segments'\nimport like from '../assets/like.json'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Tooltip from '../components/Tooltip.js';\n\nconst Listing = ({listing}) => {\n    let listingId = listing.id.toString()\n    const user = JSON.parse(sessionStorage.getItem('user'))\n    const token = sessionStorage.getItem('token')\n    const history = useHistory()\n    const [toggle, setToggle] = useState(false)\n    const [likes, setLikes] = useState()\n    const [liked, setLiked] = useState(false)\n    const [isStopped, setIsStopped] = useState(true)\n    const [loading, setLoading] = useState(false)\n    console.log(listing)\n    const toggleLike = () => {\n        if (!liked) {\n            axios.patch(`http://localhost:8000/listings/${listingId}/like`, \n                {\n                    like_count: likes + 1\n                },\n                {\n                    headers: {\n                        'Authorization': `Token ${token}`\n                    }\n                }\n            )\n            .then(() => {\n                console.log(user?.watchlist)\n                const key = Object.values(user?.watchlist).length\n                console.log(key)\n                let newWatchlist = user?.watchlist\n                newWatchlist[key] = listingId\n                return axios.patch(`http://localhost:8000/users/update/${user.username}`, \n                    {\n                        watchlist: newWatchlist\n                    },\n                    {\n                        headers: {\n                            'Authorization': `Token ${token}`\n                        }\n                    }    \n                )\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/users/view/${user.username}`)\n                    .then((response) => {\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                        getLikes(listingId)\n                    })\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n                    .then(response => {\n                        setLikes(response.data.like_count)\n                        setIsStopped(!isStopped)\n                        setLiked(!liked)\n                    })\n            })\n        } else if (liked) {\n            axios.patch(`http://localhost:8000/listings/${listingId}/like`, \n                {\n                    like_count: likes - 1\n                },\n                {\n                    headers: {\n                        'Authorization': `Token ${token}`\n                    }\n                }\n            )\n            .then(() => {\n                console.log(user?.watchlist)\n                let arr = Object.values(user?.watchlist)\n                console.log(arr)\n                let index = arr.indexOf(listingId)\n                console.log(index)\n                if (index > -1) {\n                    arr.splice(index, 1)\n                }\n                const newWatchlist = {...arr}\n                console.log(newWatchlist)\n                return axios.patch(`http://localhost:8000/users/update/${user.username}`, \n                    {\n                        watchlist: newWatchlist\n                    },\n                    {\n                        headers: {\n                            'Authorization': `Token ${token}`\n                        }\n                    }    \n                )\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/users/view/${user.username}`)\n                    .then((response) => {\n                        sessionStorage.setItem('user', JSON.stringify(response.data))\n                    })\n            })\n            .then(() => {\n                return axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n                    .then(response => {\n                        setLikes(response.data.like_count)\n                        setIsStopped(!isStopped)\n                        setLiked(!liked)\n                    })\n            })\n        }\n    }\n\n    const getLikes = (listingId) => {\n        axios.get(`http://localhost:8000/listings/${listingId}/likeCount`)\n        .then(response => {\n            setLikes(response.data.like_count)\n        })\n    }\n\n    useEffect(() => {\n        if (user) {\n            const likedBool = Object.values(user?.watchlist).includes(listingId.toString())\n            setIsStopped(!likedBool)\n            setLiked(likedBool)\n        }\n        getLikes(listingId)\n    }, [])\n    \n    \n    return (\n        <>\n        {(loading === false) && (\n        <div className=\"listing\">\n            {/* listing image */}\n            <div className=\"listing-img-div\">\n                <img src={listing.image1} />\n            </div>\n\n            {/* title, price, details btn */}\n            <div className=\"listing-title\">\n                <h3>{listing.title}</h3>\n            </div>\n            <div className=\"listing-price\">\n                <h3>${listing.price}</h3>\n            </div>\n            <div className=\"listing-like\">\n                \n                    <button \n                        className=\"listing-info-like-button\"\n                        onClick={user ? toggleLike : setToggle}\n                    >\n                        <Lottie\n                            options={{\n                                loop: false,\n                                autoplay: false,\n                                animationData: like,\n                                rendererSettings: {\n                                    preserveAspectRatio: 'xMidYMid slice'\n                                }\n                            }}\n                            height=\"35px\"\n                            width=\"35px\"\n                            isStopped={isStopped}\n                        />\n                        <span className=\"listing-info-like-text\"><h5>{likes} Likes</h5></span>\n                    </button>\n            </div>\n            <div className=\"listing-btn\">\n                {/* <Link to={`listings/${listingId}`}> */}\n                    <button className=\"button-primary\" \n                        onClick={() => {\n                        history.push(`/listings/${listingId}`)\n                        }}\n                    >Details</button>\n                {/* </Link> */}\n            </div>\n        </div>\n        )}\n        </>\n    )\n}\n\nexport default Listing\n","/Users/eskimo/Coding/Lime-market/client/src/components/Loading.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/LoginButton.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/LogoutButton.js",["157"],"import { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = (props) => {\n  return (\n    <button className=\"logout-btn\" onClick={props.logoutAll}>\n      Log Out\n    </button>\n  );\n};\n\nexport default LogoutButton;","/Users/eskimo/Coding/Lime-market/client/src/components/MenuButton.js",[],"/Users/eskimo/Coding/Lime-market/client/src/components/ListingForm.js",["158","159","160","161","162","163","164","165","166","167","168"],"/Users/eskimo/Coding/Lime-market/client/src/routes/SignupPage.js",["169","170"],"import React, { useState } from 'react'\nimport { motion } from 'framer-motion'\nimport axios from 'axios'\nimport { Link, useHistory } from 'react-router-dom' \nimport loginSvg from '../assets/login.svg'\nimport ClipLoader from 'react-spinners/ClipLoader'\n\nfunction SignupPage() {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [invalidSignup, setInvalidSignup] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    const handleSubmit = async(e) => {\n        e.preventDefault()\n        await axios.post('http://localhost:8000/users/create', {\n            username: `${username}`,\n            password: `${password}`,\n        })\n        await axios.post('http://localhost:8000/auth/', {\n            username: `${username}`,\n            password: `${password}`\n        })\n        .then((response) => {\n            console.log(response)\n            sessionStorage.setItem('token', response.data.token)\n            sessionStorage.setItem('username', username)\n            history.push('/')\n        })\n        .catch((error) => {\n            if (error) {\n                // console.log(error.response)\n                setInvalidSignup(true)\n                // console.log(invalidLogin)\n                setLoading(false)\n                return\n            }\n        });\n\n\n        // Prevent default refresh for testing\n        \n    }\n\n    return (\n        <>\n        <motion.div className=\"page-wrapper\"\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ delay: 0.5, duration: 0.25 }}\n        >\n            <div className=\"login-div\">\n                <div className=\"login-bg\">\n                    <img src={loginSvg} className=\"login-svg\" />\n                </div>\n                <div className=\"login-form-div\">\n                    <div className=\"login-form-title\">\n                        <h1>Join Us!</h1>\n                    </div>\n                    <div>\n                        <form className=\"login-form\" onSubmit={handleSubmit}>\n                            <label>\n                                <h5>Username:</h5>\n                                <input \n                                    type=\"text\"\n                                    placeholder=\"Minimum 6 characters\" \n                                    value={username} \n                                    onChange={e => \n                                        setUsername(e.target.value)\n                                    } \n                                />\n                            </label>\n                            <label>\n                                <h5>Password:</h5>\n                                <input \n                                    type=\"password\" \n                                    placeholder=\"Minimum 8 characters\"\n                                    value={password} \n                                    onChange={e =>\n                                        setPassword(e.target.value)\n                                    } \n                                />\n                            </label>\n                            <div className='clip-loader'>\n                                {invalidSignup \n                                    ? (<p className=\"invalid\">Oops, your username and/or password is too short! Try again.</p>)\n                                    : null\n                                }\n                                <ClipLoader color='green' loading={loading} size={15} />\n                            </div>    \n                                <button className=\"button-primary\" type=\"submit\" value=\"Submit\">Sign-up</button>\n                        </form>\n                    </div>\n                    <div className=\"login-bottom\">\n                        <h5>Already have an account?</h5>\n                        <Link to='/login'>\n                            <a>Login</a>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </motion.div>\n        </>\n    )\n}\n\nexport default SignupPage\n","/Users/eskimo/Coding/Lime-market/client/src/api/api.js",[],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":1,"column":27,"nodeType":"177","messageId":"178","endLine":1,"endColumn":36},{"ruleId":"175","severity":1,"message":"179","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":13},{"ruleId":"175","severity":1,"message":"180","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":14},{"ruleId":"181","severity":1,"message":"182","line":16,"column":17,"nodeType":"183","endLine":16,"endColumn":59},{"ruleId":"181","severity":1,"message":"182","line":47,"column":17,"nodeType":"183","endLine":47,"endColumn":59},{"ruleId":"175","severity":1,"message":"184","line":1,"column":46,"nodeType":"177","messageId":"178","endLine":1,"endColumn":56},{"ruleId":"175","severity":1,"message":"185","line":2,"column":26,"nodeType":"177","messageId":"178","endLine":2,"endColumn":36},{"ruleId":"175","severity":1,"message":"186","line":4,"column":10,"nodeType":"177","messageId":"178","endLine":4,"endColumn":21},{"ruleId":"175","severity":1,"message":"187","line":4,"column":23,"nodeType":"177","messageId":"178","endLine":4,"endColumn":36},{"ruleId":"175","severity":1,"message":"188","line":4,"column":53,"nodeType":"177","messageId":"178","endLine":4,"endColumn":64},{"ruleId":"175","severity":1,"message":"189","line":4,"column":137,"nodeType":"177","messageId":"178","endLine":4,"endColumn":146},{"ruleId":"175","severity":1,"message":"190","line":4,"column":148,"nodeType":"177","messageId":"178","endLine":4,"endColumn":156},{"ruleId":"175","severity":1,"message":"191","line":4,"column":158,"nodeType":"177","messageId":"178","endLine":4,"endColumn":165},{"ruleId":"175","severity":1,"message":"192","line":9,"column":8,"nodeType":"177","messageId":"178","endLine":9,"endColumn":15},{"ruleId":"175","severity":1,"message":"193","line":12,"column":10,"nodeType":"177","messageId":"178","endLine":12,"endColumn":21},{"ruleId":"175","severity":1,"message":"194","line":14,"column":8,"nodeType":"177","messageId":"178","endLine":14,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":202,"column":8,"nodeType":"197","endLine":202,"endColumn":10,"suggestions":"198"},{"ruleId":"195","severity":1,"message":"199","line":241,"column":8,"nodeType":"197","endLine":241,"endColumn":10,"suggestions":"200"},{"ruleId":"181","severity":1,"message":"182","line":261,"column":25,"nodeType":"183","endLine":261,"endColumn":43},{"ruleId":"181","severity":1,"message":"182","line":274,"column":21,"nodeType":"183","endLine":274,"endColumn":49},{"ruleId":"181","severity":1,"message":"182","line":289,"column":29,"nodeType":"183","endLine":289,"endColumn":61},{"ruleId":"175","severity":1,"message":"201","line":331,"column":35,"nodeType":"177","messageId":"178","endLine":331,"endColumn":50},{"ruleId":"195","severity":1,"message":"202","line":18,"column":6,"nodeType":"197","endLine":18,"endColumn":8,"suggestions":"203"},{"ruleId":"175","severity":1,"message":"176","line":1,"column":20,"nodeType":"177","messageId":"178","endLine":1,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":70,"column":29,"nodeType":"183","endLine":70,"endColumn":115},{"ruleId":"175","severity":1,"message":"204","line":16,"column":12,"nodeType":"177","messageId":"178","endLine":16,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":66,"column":21,"nodeType":"183","endLine":66,"endColumn":65},{"ruleId":"205","severity":1,"message":"206","line":110,"column":29,"nodeType":"183","endLine":110,"endColumn":32},{"ruleId":"175","severity":1,"message":"207","line":1,"column":10,"nodeType":"177","messageId":"178","endLine":1,"endColumn":18},{"ruleId":"175","severity":1,"message":"176","line":1,"column":20,"nodeType":"177","messageId":"178","endLine":1,"endColumn":29},{"ruleId":"175","severity":1,"message":"208","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":21},{"ruleId":"175","severity":1,"message":"209","line":2,"column":23,"nodeType":"177","messageId":"178","endLine":2,"endColumn":32},{"ruleId":"175","severity":1,"message":"210","line":6,"column":10,"nodeType":"177","messageId":"178","endLine":6,"endColumn":18},{"ruleId":"175","severity":1,"message":"211","line":8,"column":18,"nodeType":"177","messageId":"178","endLine":8,"endColumn":37},{"ruleId":"175","severity":1,"message":"212","line":9,"column":10,"nodeType":"177","messageId":"178","endLine":9,"endColumn":24},{"ruleId":"175","severity":1,"message":"211","line":4,"column":18,"nodeType":"177","messageId":"178","endLine":4,"endColumn":37},{"ruleId":"175","severity":1,"message":"207","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"213","line":5,"column":10,"nodeType":"177","messageId":"178","endLine":5,"endColumn":14},{"ruleId":"175","severity":1,"message":"214","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":15},{"ruleId":"175","severity":1,"message":"215","line":14,"column":12,"nodeType":"177","messageId":"178","endLine":14,"endColumn":18},{"ruleId":"175","severity":1,"message":"216","line":18,"column":21,"nodeType":"177","messageId":"178","endLine":18,"endColumn":31},{"ruleId":"195","severity":1,"message":"217","line":128,"column":8,"nodeType":"197","endLine":128,"endColumn":10,"suggestions":"218"},{"ruleId":"181","severity":1,"message":"182","line":137,"column":17,"nodeType":"183","endLine":137,"endColumn":45},{"ruleId":"175","severity":1,"message":"210","line":1,"column":10,"nodeType":"177","messageId":"178","endLine":1,"endColumn":18},{"ruleId":"175","severity":1,"message":"176","line":1,"column":27,"nodeType":"177","messageId":"178","endLine":1,"endColumn":36},{"ruleId":"175","severity":1,"message":"219","line":6,"column":10,"nodeType":"177","messageId":"178","endLine":6,"endColumn":23},{"ruleId":"175","severity":1,"message":"187","line":6,"column":25,"nodeType":"177","messageId":"178","endLine":6,"endColumn":38},{"ruleId":"175","severity":1,"message":"220","line":25,"column":11,"nodeType":"177","messageId":"178","endLine":25,"endColumn":18},{"ruleId":"175","severity":1,"message":"221","line":44,"column":11,"nodeType":"177","messageId":"178","endLine":44,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":140,"column":17,"nodeType":"183","endLine":140,"endColumn":65},{"ruleId":"181","severity":1,"message":"182","line":235,"column":31,"nodeType":"183","endLine":235,"endColumn":104},{"ruleId":"181","severity":1,"message":"182","line":238,"column":31,"nodeType":"183","endLine":238,"endColumn":104},{"ruleId":"181","severity":1,"message":"182","line":241,"column":31,"nodeType":"183","endLine":241,"endColumn":104},{"ruleId":"181","severity":1,"message":"182","line":244,"column":31,"nodeType":"183","endLine":244,"endColumn":104},{"ruleId":"181","severity":1,"message":"182","line":258,"column":17,"nodeType":"183","endLine":258,"endColumn":61},{"ruleId":"181","severity":1,"message":"182","line":55,"column":21,"nodeType":"183","endLine":55,"endColumn":65},{"ruleId":"205","severity":1,"message":"206","line":98,"column":29,"nodeType":"183","endLine":98,"endColumn":32},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'styled' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","'useHistory' is defined but never used.","'getListings' is defined but never used.","'updateListing' is defined but never used.","'likeListing' is defined but never used.","'likeCount' is defined but never used.","'getLikes' is defined but never used.","'getUser' is defined but never used.","'comment' is defined but never used.","'UserContext' is defined but never used.","'LoginButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'listingId', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["224"],"React Hook useEffect has missing dependencies: 'listing?.description' and 'listing?.price'. Either include them or remove the dependency array.",["225"],"'currentUserData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["226"],"'currentUser' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'useDispatch' is defined but never used.","'useParams' is defined but never used.","'useAuth0' is defined but never used.","'AnimateSharedLayout' is defined but never used.","'setCurrentUser' is defined but never used.","'Link' is defined but never used.","'Tooltip' is defined but never used.","'toggle' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'listingId' and 'user'. Either include them or remove the dependency array.",["227"],"'createListing' is defined but never used.","'listing' is assigned a value but never used.","'validate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [dispatch, listingId, user]",{"range":"236","text":"237"},"Update the dependencies array to be: [listing?.description, listing?.price]",{"range":"238","text":"239"},"Update the dependencies array to be: [dispatch]",{"range":"240","text":"241"},"Update the dependencies array to be: [listingId, user]",{"range":"242","text":"243"},[6991,6993],"[dispatch, listingId, user]",[8075,8077],"[listing?.description, listing?.price]",[466,468],"[dispatch]",[4709,4711],"[listingId, user]"]